{"version":3,"sources":["../../language/dist/index.js","../../algorithm-w/dist/index.js","Main.tsx","index.tsx"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","defineProperty","exports","value","typeUtils","ParseError","parse","PolyType","TypeFuncApp","TypeVar","Let","Abs","App","Var","NumberLiteral","CharLiteral","parser_1","require","toString","name","fun","arg","func","param","body","def","constructorName","args","_i","map","join","quantifiedVars","monoType","v","number","char","boolean","f","one","two","extra","apply","slice","list","tuple","monoTypes","Error","bind","repeat","maybe","either","left","right","c","pt","mt","standardCtx","_super","message","_this","genlex","GenLex","identifier","tokenize","C","charIn","rep","t","charLiteral","stringLiteral","numberLiteral","N","backslash","arrow","string","lparen","rparen","letTok","equal","inTok","expression2","F","try","optApp","LEAF","or","ABS","LET","PAR","expression3","toCharArray","chars","split","expr","pop","drop","then","ABS_","single","lazy","at","LET_","parser","expressionPrime","array","nestLeft","optrep","reduce","prev","cur","use","eos","code","forResponse","response","Streams","ofString","isAccepted","location","__assign","assign","n","infer","unify","combine","substitute","TypeInferenceError","language_1","substitution","context","mappedContext","key","substitutions","newSubstitution","type1","type2","_a","contains","JSON","stringify","sub","diff","bset","Set","filter","has","freeVars","type","acc","values","_infer","ctx","freshTypeName","_b","inst","_c","funcType","funcSubstitution","_d","argType","argSubstitution","unifiedSubstitution","_e","bodyType","bodySubstitution","_f","defType","defSubstitution","_g","generalise","from","to","indexOf","other","some","includes","typeCounter","Main","useState","setCode","ast","e","onClick","placeholder","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a1e6b86.chunk.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.typeUtils = exports.ParseError = exports.parse = exports.PolyType = exports.TypeFuncApp = exports.TypeVar = exports.Let = exports.Abs = exports.App = exports.Var = exports.NumberLiteral = exports.CharLiteral = void 0;\nvar parser_1 = require(\"@masala/parser\");\nvar CharLiteral = /** @class */ (function () {\n    function CharLiteral(value) {\n        this.value = value;\n    }\n    CharLiteral.prototype.toString = function () {\n        return this.value;\n    };\n    return CharLiteral;\n}());\nexports.CharLiteral = CharLiteral;\nvar NumberLiteral = /** @class */ (function () {\n    function NumberLiteral(value) {\n        this.value = value;\n    }\n    NumberLiteral.prototype.toString = function () {\n        return this.value.toString();\n    };\n    return NumberLiteral;\n}());\nexports.NumberLiteral = NumberLiteral;\nvar Var = /** @class */ (function () {\n    function Var(name) {\n        this.name = name;\n    }\n    Var.prototype.toString = function () {\n        return this.name;\n    };\n    return Var;\n}());\nexports.Var = Var;\nvar App = /** @class */ (function () {\n    function App(fun, arg) {\n        this.func = fun;\n        this.arg = arg;\n    }\n    App.prototype.toString = function () {\n        return '(' + this.func.toString() + ' ' + this.arg.toString() + ')';\n    };\n    return App;\n}());\nexports.App = App;\nvar Abs = /** @class */ (function () {\n    function Abs(param, body) {\n        this.param = param;\n        this.body = body;\n    }\n    Abs.prototype.toString = function () {\n        return '(\\\\' + this.param + ' -> ' + this.body.toString() + ')';\n    };\n    return Abs;\n}());\nexports.Abs = Abs;\nvar Let = /** @class */ (function () {\n    function Let(param, def, body) {\n        this.param = param;\n        this.def = def;\n        this.body = body;\n    }\n    Let.prototype.toString = function () {\n        return '(let ' + this.param + ' = ' + this.def.toString() + ' in ' + this.body.toString() + ')';\n    };\n    return Let;\n}());\nexports.Let = Let;\nvar TypeVar = /** @class */ (function () {\n    function TypeVar(name) {\n        this.name = name;\n    }\n    TypeVar.prototype.toString = function () {\n        return this.name;\n    };\n    return TypeVar;\n}());\nexports.TypeVar = TypeVar;\nvar TypeFuncApp = /** @class */ (function () {\n    function TypeFuncApp(constructorName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        this.constructorName = constructorName;\n        this.args = args;\n    }\n    TypeFuncApp.prototype.toString = function () {\n        return this.constructorName + (this.args.length ? ' ' : '') + this.args.map(function (a) { return '(' + a.toString() + ')'; }).join(' ');\n    };\n    return TypeFuncApp;\n}());\nexports.TypeFuncApp = TypeFuncApp;\nvar PolyType = /** @class */ (function () {\n    function PolyType(quantifiedVars, monoType) {\n        this.quantifiedVars = quantifiedVars;\n        this.monoType = monoType;\n    }\n    PolyType.prototype.toString = function () {\n        return this.quantifiedVars.map(function (v) { return '∀' + v; }).join('') + ': ' + this.monoType.toString();\n    };\n    return PolyType;\n}());\nexports.PolyType = PolyType;\n/* Type utilities */\n// Utilities which make creating types easier\nvar number = new TypeFuncApp('number');\nvar char = new TypeFuncApp('char');\nvar boolean = new TypeFuncApp('boolean');\nvar f = function (one, two) {\n    var extra = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        extra[_i - 2] = arguments[_i];\n    }\n    if (extra.length === 0)\n        return new TypeFuncApp('->', one, two);\n    return new TypeFuncApp('->', one, f.apply(void 0, __spreadArrays([two, extra[0]], extra.slice(1))));\n};\nvar list = function (monoType) { return new TypeFuncApp('[]', monoType); };\nvar tuple = function () {\n    var monoTypes = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        monoTypes[_i] = arguments[_i];\n    }\n    if (monoTypes.length <= 1)\n        throw new Error('Tuple has too few elements, minimum of 2 but given ' + monoTypes.length);\n    if (monoTypes.length > 8)\n        throw new Error('Tuple has too many elements, maximum of 8 but given ' + monoTypes.length);\n    return new (TypeFuncApp.bind.apply(TypeFuncApp, __spreadArrays([void 0, ','.repeat(monoTypes.length - 1)], monoTypes)))();\n};\nvar maybe = function (monoType) { return new TypeFuncApp('Maybe', monoType); };\nvar either = function (left, right) { return new TypeFuncApp('Either', left, right); };\nvar a = new TypeVar('a');\nvar b = new TypeVar('b');\nvar c = new TypeVar('c');\nvar d = new TypeVar('d');\nvar pt = function (mt) { return new PolyType([], mt); };\n// Set up some basic things so the langauge is interesting\nvar standardCtx = {\n    // Arithmetic\n    '+': pt(f(number, number, number)),\n    '*': pt(f(number, number, number)),\n    '-': pt(f(number, number, number)),\n    '/': pt(f(number, number, number)),\n    '%': pt(f(number, number, number)),\n    'negate': pt(f(number, number)),\n    'abs': pt(f(number, number)),\n    'signum': pt(f(number, number)),\n    'even': pt(f(number, boolean)),\n    'odd': pt(f(number, boolean)),\n    // Booleans\n    'not': pt(f(boolean, boolean)),\n    '&&': pt(f(boolean, boolean, boolean)),\n    '||': pt(f(boolean, boolean, boolean)),\n    'True': pt(boolean),\n    'False': pt(boolean),\n    // Example variables\n    'myNumber': pt(number),\n    'myBoolean': pt(boolean),\n    // Lists\n    '[]': new PolyType(['a'], list(a)),\n    ':': new PolyType(['a'], f(a, list(a), list(a))),\n    'cons': new PolyType(['a'], f(a, list(a), list(a))),\n    '++': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'head': new PolyType(['a'], f(list(a), a)),\n    'last': new PolyType(['a'], f(list(a), a)),\n    'tail': new PolyType(['a'], f(list(a), list(a))),\n    'init': new PolyType(['a'], f(list(a), list(a))),\n    'uncons': new PolyType(['a'], f(list(a), maybe(tuple(a, list(a))))),\n    'null': new PolyType(['a'], f(list(a), boolean)),\n    'length': new PolyType(['a'], f(list(a), number)),\n    'map': new PolyType(['a', 'b'], f(f(a, b), list(a), list(b))),\n    'reverse': new PolyType(['a'], f(list(a), list(a))),\n    'intersperse': new PolyType(['a'], f(a, list(a), list(a))),\n    'intercalate': new PolyType(['a'], f(list(a), list(list(a)), list(a))),\n    'transpose': new PolyType(['a'], f(list(list(a)), list(list((a))))),\n    'subsequences': new PolyType(['a'], f(list(a), list(list((a))))),\n    'permutations': new PolyType(['a'], f(list(a), list(list((a))))),\n    'foldl': new PolyType(['a'], f(f(b, a, b), b, list(a), b)),\n    'foldl\\'': new PolyType(['a'], f(f(b, a, b), b, list(a), b)),\n    'foldl1': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'foldl1\\'': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'foldr': new PolyType(['a'], f(f(a, b, b), b, list(a), b)),\n    'foldr1': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'concat': new PolyType(['a'], f(list(list(a)), list(a))),\n    'concatMap': new PolyType(['a'], f(f(a, list(a)), list(a), list(b))),\n    'and': pt(f(list(boolean), boolean)),\n    'or': pt(f(list(boolean), boolean)),\n    'any': new PolyType(['a'], f(f(a, boolean), list(a), boolean)),\n    'all': new PolyType(['a'], f(f(a, boolean), list(a), boolean)),\n    'sum': pt(f(list(number), number)),\n    'product': pt(f(list(number), number)),\n    'maximum': pt(f(list(number), number)),\n    'minimum': pt(f(list(number), number)),\n    'take': new PolyType(['a'], f(number, list(a), list(a))),\n    'drop': new PolyType(['a'], f(number, list(a), list(a))),\n    'splitAt': new PolyType(['a'], f(number, list(a), tuple(list(a), list(a)))),\n    'takeWhile': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'dropWhile': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'elem': new PolyType(['a'], f(a, list(a), boolean)),\n    'notElem': new PolyType(['a'], f(a, list(a), boolean)),\n    'lookup': new PolyType(['a', 'b'], f(a, list(tuple(a, b)), maybe(b))),\n    'find': new PolyType(['a'], f(f(a, boolean), list(a), maybe(a))),\n    'filter': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'partition': new PolyType(['a'], f(f(a, boolean), list(a), tuple(list(a), list(a)))),\n    '!!': new PolyType(['a'], f(list(a), number, a)),\n    'zip': new PolyType(['a', 'b'], f(list(a), list(b), list(tuple(a, b)))),\n    'zipWith': new PolyType(['a', 'b', 'c'], f(f(a, b, c), list(a), list(b), list(c))),\n    'unzip': new PolyType(['a', 'b'], f(list(tuple(a, b)), tuple(list(a), list(b)))),\n    'nub': new PolyType(['a'], f(list(a), list(a))),\n    'delete': new PolyType(['a'], f(a, list(a), list(a))),\n    '\\\\\\\\': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'union': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'intersect': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'sort': new PolyType(['a'], f(list(a), list(a))),\n    // Tuples\n    ',': new PolyType(['a', 'b'], f(a, b, tuple(a, b))),\n    ',,': new PolyType(['a', 'b', 'c'], f(a, b, c, tuple(a, b, c))),\n    ',,,': new PolyType(['a', 'b', 'c', 'd'], f(a, b, c, d, tuple(a, b, c, d))),\n    'fst': new PolyType(['a', 'b'], f(tuple(a, b), a)),\n    'snd': new PolyType(['a', 'b'], f(tuple(a, b), b)),\n    'curry': new PolyType(['a', 'b', 'c'], f(f(tuple(a, b), c), a, b, c)),\n    'uncurry': new PolyType(['a', 'b', 'c'], f(f(a, b, c), tuple(a, b), c)),\n    // Maybe\n    'Just': new PolyType(['a'], f(a, maybe(a))),\n    'Nothing': new PolyType(['a'], maybe(a)),\n    // Either\n    'Left': new PolyType(['a', 'b'], f(a, either(a, b))),\n    'Right': new PolyType(['a', 'b'], f(b, either(a, b))),\n    // Id\n    'id': new PolyType(['a'], f(a, a)),\n};\n/* Parser */\n// expr ::= identifier # var\n//        | ( \\ identifier -> expr ) # abs\n//        | ( expr )\n//        | expr expr # app\n//        | ( let identifier = expr in expr ) # let\n// expr ::= identifier expr' # var\n//        | ( \\ identifier -> expr ) expr' # abs\n//        | ( expr ) expr'\n//        | ( let identifier = expr in expr ) expr' # let\n// expr' ::= expr A' | eps # app\nvar ParseError = /** @class */ (function (_super) {\n    __extends(ParseError, _super);\n    function ParseError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"ParseError\";\n        return _this;\n    }\n    return ParseError;\n}(Error));\nexports.ParseError = ParseError;\nvar genlex = new parser_1.GenLex();\nvar identifier = genlex.tokenize(parser_1.C.charIn('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789*+-/%<>^:[]_|&,').rep().map(function (t) { return t.join(); }), 'identifier');\nvar charLiteral = genlex.tokenize(parser_1.C.charLiteral(), 'char');\nvar stringLiteral = genlex.tokenize(parser_1.C.stringLiteral(), 'string');\nvar numberLiteral = genlex.tokenize(parser_1.N.number(), 'number');\nvar backslash = genlex.tokenize(parser_1.C.char('\\\\'), 'backslash');\nvar arrow = genlex.tokenize(parser_1.C.string('->'), 'arrow');\nvar lparen = genlex.tokenize(parser_1.C.char('('), 'lparen');\nvar rparen = genlex.tokenize(parser_1.C.char(')'), 'rparen');\nvar letTok = genlex.tokenize(parser_1.C.string('let'), 'let');\nvar equal = genlex.tokenize(parser_1.C.char('='), 'equal');\nvar inTok = genlex.tokenize(parser_1.C.string('in'), 'in');\nvar expression1 = function () {\n    return parser_1.F.try(LET_())\n        .or(parser_1.F.try(ABS_()))\n        .or(parser_1.F.try(expression2()));\n};\nvar expression2 = function () {\n    return parser_1.F.try(optApp(LEAF()))\n        .or(parser_1.F.try(optApp(ABS())))\n        .or(parser_1.F.try(optApp(LET())))\n        .or(parser_1.F.try(optApp(PAR())));\n};\nvar expression3 = function () {\n    return parser_1.F.try(LEAF())\n        .or(parser_1.F.try(ABS()))\n        .or(parser_1.F.try(LET()))\n        .or(parser_1.F.try(PAR()));\n};\nvar toCharArray = function (string) {\n    var chars = string.split('');\n    var expr = new Var('[]');\n    while (chars.length) {\n        expr = new App(new App(new Var(':'), new CharLiteral(chars.pop())), expr);\n    }\n    return expr;\n};\n// We have to SHOUT as var and let are restricted keywords in JavaScript\nvar LEAF = function () { return parser_1.F.try(numberLiteral.map(function (value) { return new NumberLiteral(value); })).or(parser_1.F.try(stringLiteral.map(toCharArray))).or(parser_1.F.try(charLiteral.map(function (value) { return new CharLiteral(value); }))).or(parser_1.F.try(identifier.map(function (value) { return new Var(value); }))); };\nvar ABS = function () { return lparen.drop().then(ABS_()).then(rparen.drop()).single(); };\nvar ABS_ = function () { return backslash.drop().then(identifier).then(arrow.drop()).then(parser_1.F.lazy(expression2)).map(function (tuple) { return new Abs(tuple.at(0), tuple.at(1)); }); };\nvar PAR = function () { return lparen.drop().then(parser_1.F.lazy(expression2)).then(rparen.drop()).single(); };\nvar LET = function () { return lparen.drop().then(LET_()).then(rparen.drop()).single(); };\nvar LET_ = function () { return letTok.drop().then(identifier).then(equal.drop()).then(parser_1.F.lazy(expression2)).then(inTok.drop()).then(parser_1.F.lazy(expression2)).map(function (tuple) { return new Let(tuple.at(0), tuple.at(1), tuple.at(2)); }); };\nvar optApp = function (parser) { return parser.then(expressionPrime()).array().map(nestLeft); };\nvar expressionPrime = function () { return parser_1.F.lazy(expression3).optrep(); };\nvar nestLeft = function (v) { return v.reduce(function (prev, cur) { return new App(prev, cur); }); };\nvar parser = genlex.use(expression1().then(parser_1.F.eos().drop()).single());\nfunction parse(code, forResponse) {\n    if (forResponse === void 0) { forResponse = false; }\n    var response = parser.parse(parser_1.Streams.ofString(code));\n    if (forResponse)\n        return response;\n    if (response.isAccepted())\n        return response.value;\n    throw new ParseError('Failed to parse:\\n\\t' + code + '\\n\\t' + ' '.repeat(response.location()) + '^');\n}\nexports.parse = parse;\nvar typeUtils = { number: number, char: char, boolean: boolean, f: f, list: list, tuple: tuple, maybe: maybe, either: either, a: a, b: b, c: c, d: d, pt: pt, standardCtx: standardCtx };\nexports.typeUtils = typeUtils;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.apply = exports.infer = exports.unify = exports.combine = exports.substitute = exports.TypeInferenceError = void 0;\nvar language_1 = require(\"language\");\nvar TypeInferenceError = /** @class */ (function (_super) {\n    __extends(TypeInferenceError, _super);\n    function TypeInferenceError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"TypeInferenceError\";\n        return _this;\n    }\n    return TypeInferenceError;\n}(Error));\nexports.TypeInferenceError = TypeInferenceError;\nfunction substitute(substitution, arg) {\n    var context = arg;\n    var mappedContext = {};\n    for (var key in context) {\n        mappedContext[key] = apply(context[key], substitution);\n    }\n    return mappedContext;\n}\nexports.substitute = substitute;\n/** Combines substitutions. Applies leftmost substitution first, e.g. combine(a, b).apply(e) == e.apply(a).apply(b) */\nfunction combine() {\n    var substitutions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        substitutions[_i] = arguments[_i];\n    }\n    if (substitutions.length === 0)\n        return {};\n    if (substitutions.length === 1)\n        return substitutions[0];\n    if (substitutions.length > 2)\n        return combine(substitutions[0], combine.apply(void 0, substitutions.slice(1)));\n    var a = substitutions[0];\n    var b = substitutions[1];\n    var newSubstitution = {};\n    for (var key in a) {\n        newSubstitution[key] = apply(a[key], b);\n    }\n    for (var key in b) {\n        if (!(key in a)) {\n            newSubstitution[key] = b[key];\n        }\n    }\n    return newSubstitution;\n}\nexports.combine = combine;\nfunction unify(type1, type2) {\n    var _a;\n    if (type1 instanceof language_1.TypeVar) {\n        if (contains(type2, type1)) {\n            throw new TypeInferenceError('Contains/occurs check failed with ' + JSON.stringify(type1) + ' and ' + JSON.stringify(type2));\n        }\n        return _a = {}, _a[type1.name] = type2, _a;\n    }\n    if (type2 instanceof language_1.TypeVar) {\n        return unify(type2, type1);\n    }\n    if (type1 instanceof language_1.TypeFuncApp && type2 instanceof language_1.TypeFuncApp) {\n        if (type1.constructorName !== type2.constructorName) {\n            throw new TypeInferenceError('Could not unify type function applications with different constructors \\'' + type1.constructorName + '\\' and \\'' + type2.constructorName + '\\'');\n        }\n        if (type1.args.length !== type2.args.length) {\n            throw new TypeInferenceError('Could not unify type function applications with different argument list lengths ' + JSON.stringify(type1) + ' and ' + JSON.stringify(type2));\n        }\n        var sub = {};\n        for (var i = 0; i < type1.args.length; i++) {\n            sub = combine(unify(apply(type1.args[i], sub), apply(type2.args[i], sub)), sub);\n        }\n        return sub;\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nexports.unify = unify;\n/** a \\ b */\nfunction diff(a, b) {\n    var bset = new Set(b);\n    return a.filter(function (v) { return !bset.has(v); });\n}\nfunction freeVars(type) {\n    if (type instanceof language_1.PolyType) {\n        return diff(freeVars(type.monoType), type.quantifiedVars);\n    }\n    if (type instanceof language_1.TypeVar) {\n        return [type.name];\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return type.args.map(freeVars).reduce(function (acc, cur) { return __spreadArrays(acc, cur); }, []);\n    }\n    if (type) {\n        // type: Context\n        return Object.values(type).map(freeVars).reduce(function (acc, cur) { return __spreadArrays(acc, cur); }, []);\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction generalise(ctx, type) {\n    return new language_1.PolyType(diff(freeVars(type), freeVars(ctx)), type);\n}\nfunction infer(expr, ctx) {\n    if (ctx === void 0) { ctx = language_1.typeUtils.standardCtx; }\n    var typeCounter = 0;\n    var freshTypeName = function () { return \"t\" + typeCounter++; };\n    return _infer(expr, ctx, freshTypeName)[0];\n}\nexports.infer = infer;\nfunction _infer(expr, ctx, freshTypeName) {\n    var _a, _b;\n    if (expr instanceof language_1.CharLiteral) {\n        return [inst(new language_1.PolyType([], new language_1.TypeFuncApp('char')), freshTypeName), {}];\n    }\n    if (expr instanceof language_1.NumberLiteral) {\n        return [inst(new language_1.PolyType([], new language_1.TypeFuncApp('number')), freshTypeName), {}];\n    }\n    if (expr instanceof language_1.Var) {\n        var type = ctx[expr.name];\n        if (!type) {\n            throw new TypeInferenceError(expr.name + ' is not in scope');\n        }\n        return [inst(type, freshTypeName), {}];\n    }\n    if (expr instanceof language_1.App) {\n        var _c = _infer(expr.func, ctx, freshTypeName), funcType = _c[0], funcSubstitution = _c[1];\n        var _d = _infer(expr.arg, substitute(funcSubstitution, ctx), freshTypeName), argType = _d[0], argSubstitution = _d[1];\n        var t = new language_1.TypeVar(freshTypeName());\n        var unifiedSubstitution = unify(apply(funcType, argSubstitution), new language_1.TypeFuncApp(\"->\", argType, t));\n        return [apply(t, unifiedSubstitution), combine(funcSubstitution, argSubstitution, unifiedSubstitution)];\n    }\n    if (expr instanceof language_1.Abs) {\n        var t = new language_1.TypeVar(freshTypeName());\n        var _e = _infer(expr.body, __assign(__assign({}, ctx), (_a = {}, _a[expr.param] = new language_1.PolyType([], t), _a)), freshTypeName), bodyType = _e[0], bodySubstitution = _e[1];\n        return [apply(new language_1.TypeFuncApp(\"->\", t, bodyType), bodySubstitution), bodySubstitution];\n    }\n    if (expr instanceof language_1.Let) {\n        var _f = _infer(expr.def, ctx, freshTypeName), defType = _f[0], defSubstitution = _f[1];\n        var _g = _infer(expr.body, __assign(__assign({}, substitute(defSubstitution, ctx)), (_b = {}, _b[expr.param] = generalise(substitute(defSubstitution, ctx), defType), _b)), freshTypeName), bodyType = _g[0], bodySubstitution = _g[1];\n        return [bodyType, combine(defSubstitution, bodySubstitution)];\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction inst(type, freshTypeName, from, to) {\n    if (from === void 0) { from = []; }\n    if (to === void 0) { to = []; }\n    if (type instanceof language_1.TypeVar) {\n        var i = from.indexOf(type.name);\n        return (i === -1) ? type : new language_1.TypeVar(to[i]);\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return new (language_1.TypeFuncApp.bind.apply(language_1.TypeFuncApp, __spreadArrays([void 0, type.constructorName], type.args.map(function (arg) { return inst(arg, freshTypeName, from, to); }))))();\n    }\n    if (type instanceof language_1.PolyType) {\n        return inst(type.monoType, freshTypeName, type.quantifiedVars, type.quantifiedVars.map(freshTypeName));\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction apply(type, substitution) {\n    if (type instanceof language_1.TypeVar) {\n        return type.name in substitution ? substitution[type.name] : type;\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return new (language_1.TypeFuncApp.bind.apply(language_1.TypeFuncApp, __spreadArrays([void 0, type.constructorName], type.args.map(function (arg) { return apply(arg, substitution); }))))();\n    }\n    if (type instanceof language_1.PolyType) {\n        return new language_1.PolyType(type.quantifiedVars, apply(type.monoType, substitution));\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nexports.apply = apply;\nfunction contains(type, other) {\n    if (type instanceof language_1.TypeVar) {\n        return type.name == other.name;\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return type.args.some(function (arg) { return contains(arg, other); });\n    }\n    if (type instanceof language_1.PolyType) {\n        return contains(type.monoType, other) && !type.quantifiedVars.includes(other.name);\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\n","import React, { useState } from 'react';\nimport './Main.css';\nimport { MonoType, Expr, Var, App, Abs, Let, parse, ParseError, NumberLiteral, CharLiteral } from 'language'\nimport { infer, TypeInferenceError } from 'algorithm-w'\n\nfunction Main() {\n  const [code, setCode] = useState('map not []');\n  // Either the result or error message\n  let ast: Expr | string = 'Failed to parse';\n  let type: MonoType | string = 'Failed to infer type';\n  try {\n    ast = parse(code);\n    if (!(ast instanceof CharLiteral) && !(ast instanceof NumberLiteral) && !(ast instanceof Var) && !(ast instanceof App) && !(ast instanceof Abs) && !(ast instanceof Let)) {\n      throw new Error('Not a valid expression');\n    }\n    type = infer(ast);\n  } catch (e) {\n    if (e.name === ParseError.name) {\n      ast = (e as ParseError).message;\n    } else if (e.name === TypeInferenceError.name) {\n      type = (e as TypeInferenceError).message;\n    } else {\n      ast = 'Not a valid expression: ' + JSON.stringify(e.message);\n    }\n  }\n\n  return (\n    <>\n      <h1>interactive type inference</h1>\n      <h2>\n        Play with algorithm W in your browser.\n      </h2>\n      <h2>Samples:\n        <button onClick={() => setCode('4')}>4</button>\n        <button onClick={() => setCode('+')}>+</button>\n        <button onClick={() => setCode('map not []')}>map not []</button>\n        <button onClick={() => setCode('fst')}>fst</button>\n        <button onClick={() => setCode('Just')}>Just</button>\n        <button onClick={() => setCode('let x = 3 in + x')}>let x = 3 in + x</button>\n      </h2>\n      <textarea placeholder=\"Enter code here...\" value={code} onChange={e => setCode(e.target.value)}></textarea>\n\n      <h2>AST</h2>\n      <p>{ast.toString()}</p>\n\n      <h2>Type</h2>\n      <p>{type.toString()}</p>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}