{"version":3,"sources":["../../language/dist/index.js","../../algorithm-w/dist/index.js","config.ts","analytics.ts","ASTView.tsx","ResultView.tsx","Main.tsx","index.tsx"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","defineProperty","exports","value","typeUtils","ParseError","parse","PolyType","TypeFuncApp","TypeVar","Let","Abs","App","Var","NumberLiteral","CharLiteral","masala_parser_1","require","pos","notes","toString","name","fun","arg","func","param","body","def","constructorName","args","_i","startsWith","join","every","map","quantifiedVars","monoType","v","number","char","boolean","f","one","two","extra","apply","slice","list","tuple","monoTypes","Error","bind","repeat","maybe","either","left","right","c","pt","mt","standardCtx","_super","message","_this","genlex","GenLex","identifier","tokenize","C","charIn","rep","t","letTok","string","inTok","charLiteral","stringLiteral","numberLiteral","N","integer","lbracket","rbracket","backslash","arrow","lparen","rparen","equal","comma","expression1","F","try","LET_","or","ABS_","expression2","optApp","LEAF","ABS","LET","PAR","expression3","toCharList","chars","split","getPos","expr","start","end","charPos","toList","first","last","elements","at","array","orElse","toTuple","result","nestLeft","offset","getOffset","input","location","guessedEnd","rawString","source","trimEnd","expandPos","indexOf","lastIndexOf","then","lazy","drop","optrep","opt","single","parser","expressionPrime","reduce","prev","cur","use","eos","code","forResponse","specialCase","endsWith","accepted","issuePosition","specialCases","response","Streams","ofString","isAccepted","__assign","assign","n","infer","unify","combine","substitute","TypeInferenceError","language_1","substitution","context","mappedContext","key","substitutions","newSubstitution","type1","type2","_a","contains","sub","diff","bset","Set","filter","has","freeVars","type","acc","values","generalise","ctx","xs","vs","forEach","x","push","unique","typeCounter","freshTypeName","_infer","steps","ast","cloneAst","e","get","highlight","Map","set","logger","_b","except","inst","err","instantiatedType","_c","funcType","funcSubstitution","_d","argType","argSubstitution","firstPartOfLogMessage","unifiedSubstitution","exprType","keys","replace","_e","bodyType","bodySubstitution","_f","defType","defSubstitution","generalisedDefType","_g","from","to","other","some","includes","config","analytics","enabled","url","useAnalytics","navigator","doNotTrack","streamId","Math","random","data","fetch","method","headers","JSON","stringify","project","fn","delayInMiliseconds","timeout","clearTimeout","setTimeout","undefined","debounce","NodeView","node","hoverCallback","NodeWrapperView","className","NodeChildView","symbol","children","onMouseOver","onMouseOut","data-symbol","ASTView","createHoverCallback","setHighlights","otherHighlights","active","ResultView","parseResult","useEffect","inferenceResult","step","document","getElementById","style","overflow","SetCodeButton","setCode","onClick","Main","useState","highlights","showingHelp","setShowingHelp","hideHelp","resultview","useMemo","id","target","entries","data-testid","placeholder","onChange","h","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.584306cf.chunk.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.typeUtils = exports.ParseError = exports.parse = exports.PolyType = exports.TypeFuncApp = exports.TypeVar = exports.Let = exports.Abs = exports.App = exports.Var = exports.NumberLiteral = exports.CharLiteral = void 0;\nvar masala_parser_1 = require(\"@domdomegg/masala-parser\");\nvar CharLiteral = /** @class */ (function () {\n    function CharLiteral(value, pos, notes) {\n        this.value = value;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    CharLiteral.prototype.toString = function () {\n        return \"'\" + this.value + \"'\";\n    };\n    return CharLiteral;\n}());\nexports.CharLiteral = CharLiteral;\nvar NumberLiteral = /** @class */ (function () {\n    function NumberLiteral(value, pos, notes) {\n        this.value = value;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    NumberLiteral.prototype.toString = function () {\n        return this.value.toString();\n    };\n    return NumberLiteral;\n}());\nexports.NumberLiteral = NumberLiteral;\nvar Var = /** @class */ (function () {\n    function Var(name, pos, notes) {\n        this.name = name;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    Var.prototype.toString = function () {\n        return this.name;\n    };\n    return Var;\n}());\nexports.Var = Var;\nvar App = /** @class */ (function () {\n    function App(fun, arg, pos, notes) {\n        this.func = fun;\n        this.arg = arg;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    App.prototype.toString = function () {\n        return '(' + this.func.toString() + ' ' + this.arg.toString() + ')';\n    };\n    return App;\n}());\nexports.App = App;\nvar Abs = /** @class */ (function () {\n    function Abs(param, body, pos, notes) {\n        this.param = param;\n        this.body = body;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    Abs.prototype.toString = function () {\n        return '(\\\\' + this.param + ' -> ' + this.body.toString() + ')';\n    };\n    return Abs;\n}());\nexports.Abs = Abs;\nvar Let = /** @class */ (function () {\n    function Let(param, def, body, pos, notes) {\n        this.param = param;\n        this.def = def;\n        this.body = body;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    Let.prototype.toString = function () {\n        return '(let ' + this.param + ' = ' + this.def.toString() + ' in ' + this.body.toString() + ')';\n    };\n    return Let;\n}());\nexports.Let = Let;\nvar TypeVar = /** @class */ (function () {\n    function TypeVar(name) {\n        this.name = name;\n    }\n    TypeVar.prototype.toString = function () {\n        return this.name;\n    };\n    return TypeVar;\n}());\nexports.TypeVar = TypeVar;\nvar TypeFuncApp = /** @class */ (function () {\n    function TypeFuncApp(constructorName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        this.constructorName = constructorName;\n        this.args = args;\n    }\n    TypeFuncApp.prototype.toString = function () {\n        if (this.constructorName == '->') {\n            var firstArgIsFunction = this.args[0] instanceof TypeFuncApp && this.args[0].constructorName == '->';\n            return (firstArgIsFunction ? '(' + this.args[0].toString() + ')' : this.args[0].toString()) + ' -> ' + this.args[1].toString();\n        }\n        if (this.constructorName == '[]') {\n            return '[' + this.args[0].toString() + ']';\n        }\n        if (this.constructorName.startsWith(',')) {\n            return '(' + this.args.join(', ') + ')';\n        }\n        if (this.args.every(function (arg) { return arg instanceof TypeVar || arg.constructorName == 'Int' || arg.constructorName == 'Char' || arg.constructorName == 'Bool'; })) {\n            return this.constructorName + (this.args.length ? ' ' : '') + this.args.map(function (a) { return '' + a.toString() + ''; }).join(' ');\n        }\n        return this.constructorName + (this.args.length ? ' ' : '') + this.args.map(function (a) { return '(' + a.toString() + ')'; }).join(' ');\n    };\n    return TypeFuncApp;\n}());\nexports.TypeFuncApp = TypeFuncApp;\nvar PolyType = /** @class */ (function () {\n    function PolyType(quantifiedVars, monoType) {\n        this.quantifiedVars = quantifiedVars;\n        this.monoType = monoType;\n    }\n    PolyType.prototype.toString = function () {\n        return (this.quantifiedVars.length ? (this.quantifiedVars.map(function (v) { return '∀' + v; }).join('') + ': ') : '') + this.monoType.toString();\n    };\n    return PolyType;\n}());\nexports.PolyType = PolyType;\n/* Type utilities */\n// Utilities which make creating types easier\nvar number = new TypeFuncApp('Int');\nvar char = new TypeFuncApp('Char');\nvar boolean = new TypeFuncApp('Bool');\nvar f = function (one, two) {\n    var extra = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        extra[_i - 2] = arguments[_i];\n    }\n    if (extra.length === 0)\n        return new TypeFuncApp('->', one, two);\n    return new TypeFuncApp('->', one, f.apply(void 0, __spreadArrays([two, extra[0]], extra.slice(1))));\n};\nvar list = function (monoType) { return new TypeFuncApp('[]', monoType); };\nvar tuple = function () {\n    var monoTypes = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        monoTypes[_i] = arguments[_i];\n    }\n    if (monoTypes.length <= 1)\n        throw new Error('Tuple has too few elements, minimum of 2 but given ' + monoTypes.length);\n    if (monoTypes.length > 9)\n        throw new Error('Tuple has too many elements, maximum of 9 but given ' + monoTypes.length);\n    return new (TypeFuncApp.bind.apply(TypeFuncApp, __spreadArrays([void 0, ','.repeat(monoTypes.length - 1)], monoTypes)))();\n};\nvar maybe = function (monoType) { return new TypeFuncApp('Maybe', monoType); };\nvar either = function (left, right) { return new TypeFuncApp('Either', left, right); };\nvar a = new TypeVar('a');\nvar b = new TypeVar('b');\nvar c = new TypeVar('c');\nvar d = new TypeVar('d');\nvar pt = function (mt) { return new PolyType([], mt); };\n// Set up some basic things so the langauge is interesting\nvar standardCtx = {\n    // Arithmetic\n    '+': pt(f(number, number, number)),\n    '*': pt(f(number, number, number)),\n    '-': pt(f(number, number, number)),\n    '/': pt(f(number, number, number)),\n    '%': pt(f(number, number, number)),\n    'negate': pt(f(number, number)),\n    'abs': pt(f(number, number)),\n    'signum': pt(f(number, number)),\n    'even': pt(f(number, boolean)),\n    'odd': pt(f(number, boolean)),\n    // Booleans\n    'not': pt(f(boolean, boolean)),\n    '&&': pt(f(boolean, boolean, boolean)),\n    '||': pt(f(boolean, boolean, boolean)),\n    'True': pt(boolean),\n    'False': pt(boolean),\n    // Example variables\n    'myNumber': pt(number),\n    'myBoolean': pt(boolean),\n    // Lists\n    '[]': new PolyType(['a'], list(a)),\n    ':': new PolyType(['a'], f(a, list(a), list(a))),\n    'cons': new PolyType(['a'], f(a, list(a), list(a))),\n    '++': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'head': new PolyType(['a'], f(list(a), a)),\n    'last': new PolyType(['a'], f(list(a), a)),\n    'tail': new PolyType(['a'], f(list(a), list(a))),\n    'init': new PolyType(['a'], f(list(a), list(a))),\n    'uncons': new PolyType(['a'], f(list(a), maybe(tuple(a, list(a))))),\n    'null': new PolyType(['a'], f(list(a), boolean)),\n    'length': new PolyType(['a'], f(list(a), number)),\n    'map': new PolyType(['a', 'b'], f(f(a, b), list(a), list(b))),\n    'reverse': new PolyType(['a'], f(list(a), list(a))),\n    'intersperse': new PolyType(['a'], f(a, list(a), list(a))),\n    'intercalate': new PolyType(['a'], f(list(a), list(list(a)), list(a))),\n    'transpose': new PolyType(['a'], f(list(list(a)), list(list((a))))),\n    'subsequences': new PolyType(['a'], f(list(a), list(list((a))))),\n    'permutations': new PolyType(['a'], f(list(a), list(list((a))))),\n    'foldl': new PolyType(['a'], f(f(b, a, b), b, list(a), b)),\n    'foldl\\'': new PolyType(['a'], f(f(b, a, b), b, list(a), b)),\n    'foldl1': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'foldl1\\'': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'foldr': new PolyType(['a'], f(f(a, b, b), b, list(a), b)),\n    'foldr1': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'concat': new PolyType(['a'], f(list(list(a)), list(a))),\n    'concatMap': new PolyType(['a'], f(f(a, list(a)), list(a), list(b))),\n    'and': pt(f(list(boolean), boolean)),\n    'or': pt(f(list(boolean), boolean)),\n    'any': new PolyType(['a'], f(f(a, boolean), list(a), boolean)),\n    'all': new PolyType(['a'], f(f(a, boolean), list(a), boolean)),\n    'sum': pt(f(list(number), number)),\n    'product': pt(f(list(number), number)),\n    'maximum': pt(f(list(number), number)),\n    'minimum': pt(f(list(number), number)),\n    'take': new PolyType(['a'], f(number, list(a), list(a))),\n    'drop': new PolyType(['a'], f(number, list(a), list(a))),\n    'splitAt': new PolyType(['a'], f(number, list(a), tuple(list(a), list(a)))),\n    'takeWhile': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'dropWhile': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'elem': new PolyType(['a'], f(a, list(a), boolean)),\n    'notElem': new PolyType(['a'], f(a, list(a), boolean)),\n    'lookup': new PolyType(['a', 'b'], f(a, list(tuple(a, b)), maybe(b))),\n    'find': new PolyType(['a'], f(f(a, boolean), list(a), maybe(a))),\n    'filter': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'partition': new PolyType(['a'], f(f(a, boolean), list(a), tuple(list(a), list(a)))),\n    '!!': new PolyType(['a'], f(list(a), number, a)),\n    'zip': new PolyType(['a', 'b'], f(list(a), list(b), list(tuple(a, b)))),\n    'zipWith': new PolyType(['a', 'b', 'c'], f(f(a, b, c), list(a), list(b), list(c))),\n    'unzip': new PolyType(['a', 'b'], f(list(tuple(a, b)), tuple(list(a), list(b)))),\n    'nub': new PolyType(['a'], f(list(a), list(a))),\n    'delete': new PolyType(['a'], f(a, list(a), list(a))),\n    'union': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'intersect': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'sort': new PolyType(['a'], f(list(a), list(a))),\n    // Tuples\n    ',': new PolyType(['a', 'b'], f(a, b, tuple(a, b))),\n    ',,': new PolyType(['a', 'b', 'c'], f(a, b, c, tuple(a, b, c))),\n    ',,,': new PolyType(['a', 'b', 'c', 'd'], f(a, b, c, d, tuple(a, b, c, d))),\n    ',,,,': new PolyType(['a', 'b', 'c', 'd', 'e'], f(a, b, c, d, new TypeVar('e'), tuple(a, b, c, d, new TypeVar('e')))),\n    ',,,,,': new PolyType(['a', 'b', 'c', 'd', 'e', 'f'], f(a, b, c, d, new TypeVar('e'), new TypeVar('f'), tuple(a, b, c, d, new TypeVar('e'), new TypeVar('f')))),\n    ',,,,,,': new PolyType(['a', 'b', 'c', 'd', 'e', 'f', 'g'], f(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g'), tuple(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g')))),\n    ',,,,,,,': new PolyType(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'], f(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g'), new TypeVar('h'), tuple(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g'), new TypeVar('h')))),\n    ',,,,,,,,': new PolyType(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i'], f(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g'), new TypeVar('h'), new TypeVar('i'), tuple(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g'), new TypeVar('h'), new TypeVar('i')))),\n    't': new PolyType(['a', 'b'], f(a, b, tuple(a, b))),\n    'tt': new PolyType(['a', 'b', 'c'], f(a, b, c, tuple(a, b, c))),\n    'ttt': new PolyType(['a', 'b', 'c', 'd'], f(a, b, c, d, tuple(a, b, c, d))),\n    'tttt': new PolyType(['a', 'b', 'c', 'd', 'e'], f(a, b, c, d, new TypeVar('e'), tuple(a, b, c, d, new TypeVar('e')))),\n    'ttttt': new PolyType(['a', 'b', 'c', 'd', 'e', 'f'], f(a, b, c, d, new TypeVar('e'), new TypeVar('f'), tuple(a, b, c, d, new TypeVar('e'), new TypeVar('f')))),\n    'tttttt': new PolyType(['a', 'b', 'c', 'd', 'e', 'f', 'g'], f(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g'), tuple(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g')))),\n    'ttttttt': new PolyType(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'], f(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g'), new TypeVar('h'), tuple(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g'), new TypeVar('h')))),\n    'tttttttt': new PolyType(['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i'], f(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g'), new TypeVar('h'), new TypeVar('i'), tuple(a, b, c, d, new TypeVar('e'), new TypeVar('f'), new TypeVar('g'), new TypeVar('h'), new TypeVar('i')))),\n    'fst': new PolyType(['a', 'b'], f(tuple(a, b), a)),\n    'snd': new PolyType(['a', 'b'], f(tuple(a, b), b)),\n    'curry': new PolyType(['a', 'b', 'c'], f(f(tuple(a, b), c), a, b, c)),\n    'uncurry': new PolyType(['a', 'b', 'c'], f(f(a, b, c), tuple(a, b), c)),\n    // Maybe\n    'Just': new PolyType(['a'], f(a, maybe(a))),\n    'Nothing': new PolyType(['a'], maybe(a)),\n    // Either\n    'Left': new PolyType(['a', 'b'], f(a, either(a, b))),\n    'Right': new PolyType(['a', 'b'], f(b, either(a, b))),\n    // Id\n    'id': new PolyType(['a'], f(a, a)),\n};\n/* Parser */\n// expr ::= identifier # var\n//        | ( \\ identifier -> expr ) # abs\n//        | ( expr )\n//        | expr expr # app\n//        | ( let identifier = expr in expr ) # let\n// expr ::= identifier expr' # var\n//        | ( \\ identifier -> expr ) expr' # abs\n//        | ( expr ) expr'\n//        | ( let identifier = expr in expr ) expr' # let\n// expr' ::= expr A' | eps # app\nvar ParseError = /** @class */ (function (_super) {\n    __extends(ParseError, _super);\n    function ParseError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"ParseError\";\n        return _this;\n    }\n    return ParseError;\n}(Error));\nexports.ParseError = ParseError;\nvar genlex = new masala_parser_1.GenLex();\nvar identifier = genlex.tokenize(masala_parser_1.C.charIn('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789*+-/%<>^:_|&!\\'').rep().map(function (t) { return t.join(); }), 'identifier');\nvar letTok = genlex.tokenize(masala_parser_1.C.string('let '), 'let');\nvar inTok = genlex.tokenize(masala_parser_1.C.string('in '), 'in');\nvar charLiteral = genlex.tokenize(masala_parser_1.C.charLiteral(), 'char');\nvar stringLiteral = genlex.tokenize(masala_parser_1.C.stringLiteral(), 'string');\n// const numberLiteral = genlex.tokenize(N.number(), 'number');\nvar numberLiteral = genlex.tokenize(masala_parser_1.N.integer(), 'number');\nvar lbracket = genlex.tokenize(masala_parser_1.C.char('['), 'lbracket');\nvar rbracket = genlex.tokenize(masala_parser_1.C.char(']'), 'rbracket');\nvar backslash = genlex.tokenize(masala_parser_1.C.char('\\\\'), 'backslash');\nvar arrow = genlex.tokenize(masala_parser_1.C.string('->'), 'arrow');\nvar lparen = genlex.tokenize(masala_parser_1.C.char('('), 'lparen');\nvar rparen = genlex.tokenize(masala_parser_1.C.char(')'), 'rparen');\nvar equal = genlex.tokenize(masala_parser_1.C.char('='), 'equal');\nvar comma = genlex.tokenize(masala_parser_1.C.char(','), 'comma');\nvar expression1 = function () {\n    return masala_parser_1.F.try(LET_())\n        .or(masala_parser_1.F.try(ABS_()))\n        .or(masala_parser_1.F.try(expression2()));\n};\nvar expression2 = function () {\n    return masala_parser_1.F.try(optApp(LEAF()))\n        .or(masala_parser_1.F.try(optApp(ABS())))\n        .or(masala_parser_1.F.try(optApp(LET())))\n        .or(masala_parser_1.F.try(optApp(PAR())));\n};\nvar expression3 = function () {\n    return masala_parser_1.F.try(LEAF())\n        .or(masala_parser_1.F.try(ABS()))\n        .or(masala_parser_1.F.try(LET()))\n        .or(masala_parser_1.F.try(PAR()));\n};\nvar toCharList = function (string, r) {\n    var chars = string.split('');\n    var pos = getPos(r);\n    var expr = new Var('[]', { start: pos.end - 1, end: pos.end });\n    for (var i = chars.length - 1; i >= 0; i--) {\n        var charPos = { start: pos.start + 1 + i, end: pos.start + 2 + i };\n        expr = new App(new App(new Var(':', charPos), new CharLiteral(chars[i], charPos), charPos), expr, { start: pos.start + 1 + i, end: pos.end - 1 });\n    }\n    expr.pos.start = pos.start;\n    expr.pos.end = pos.end;\n    return expr;\n};\nvar toList = function (tuple) {\n    var start = tuple.first();\n    var end = tuple.last();\n    var elements = tuple.at(1).map(function (t) { return t.array(); }).orElse([]);\n    var pos = { start: start, end: end };\n    var expr = new Var('[]', { start: pos.end - 1, end: pos.end });\n    for (var i = elements.length - 1; i >= 0; i--) {\n        expr = new App(new App(new Var(':', elements[i].pos), elements[i], elements[i].pos), expr, { start: elements[i].pos.start, end: pos.end });\n    }\n    expr.pos.start = pos.start;\n    expr.pos.end = pos.end;\n    return expr;\n};\nvar toTuple = function (tuple) {\n    var start = tuple.first();\n    var end = tuple.last();\n    var elements = tuple.at(1);\n    var result = nestLeft(__spreadArrays([new Var(','.repeat(elements.length - 1), { start: start, end: start + 1 })], elements));\n    result.pos.start = start;\n    result.pos.end = end;\n    return result;\n};\nvar getPos = function (r) {\n    var offset = r.getOffset() - 1;\n    var start = r.input.location(offset);\n    var guessedEnd = r.input.location(offset + 1);\n    var rawString = r.input.source.input.source.slice(start, guessedEnd);\n    var end = guessedEnd - (rawString.length - rawString.trimEnd().length);\n    return { start: start, end: end };\n};\nvar expandPos = function (v, r) {\n    var rawString = r.input.source.input.source;\n    v.pos.end += rawString.slice(v.pos.end).indexOf(')') + 1;\n    v.pos.start = rawString.slice(0, v.pos.start).lastIndexOf('(');\n    return v;\n};\n// We have to SHOUT as var and let are restricted keywords in JavaScript\nvar LEAF = function () { return masala_parser_1.F\n    .try(numberLiteral.map(function (value, r) { return new NumberLiteral(value, getPos(r)); }))\n    .or(masala_parser_1.F.try(stringLiteral.map(toCharList)))\n    .or(masala_parser_1.F.try(charLiteral.map(function (value, r) { return new CharLiteral(value, getPos(r)); })))\n    .or(masala_parser_1.F.try(lbracket.map(function (v, r) { return r.location() - 1; }).then((masala_parser_1.F.lazy(expression1).then((comma.drop().then(masala_parser_1.F.lazy(expression1))).optrep())).opt()).then(rbracket.map(function (s, r) { return getPos(r).end; })).map(toList)))\n    .or(masala_parser_1.F.try(lparen.map(function (v, r) { return r.location() - 1; }).then((masala_parser_1.F.lazy(expression1).then((comma.drop().then(masala_parser_1.F.lazy(expression1))).rep())).array()).then(rparen.map(function (s, r) { return getPos(r).end; })).map(toTuple)))\n    .or(masala_parser_1.F.try(identifier.map(function (value, r) { return new Var(value, getPos(r)); }))); };\nvar ABS = function () { return lparen.drop().then(ABS_()).then(rparen.drop()).single().map(expandPos); };\nvar ABS_ = function () { return backslash.map(function (v, r) { return r.location() - 1; }).then(identifier).then(arrow.drop()).then(masala_parser_1.F.lazy(expression1)).map(function (tuple, r) { return new Abs(tuple.at(1), tuple.at(2), { start: tuple.at(0), end: r.location() }); }); };\nvar PAR = function () { return lparen.drop().then(masala_parser_1.F.lazy(expression2)).then(rparen.drop()).single().map(expandPos); };\nvar LET = function () { return lparen.drop().then(LET_()).then(rparen.drop()).single().map(expandPos); };\nvar LET_ = function () { return letTok.map(function (v, r) { return getPos(r).start; }).then(identifier).then(equal.drop()).then(masala_parser_1.F.lazy(expression2)).then(inTok.drop()).then(masala_parser_1.F.lazy(expression2)).map(function (tuple, r) { return new Let(tuple.at(1), tuple.at(2), tuple.at(3), { start: tuple.at(0), end: r.location() }); }); };\nvar optApp = function (parser) { return parser.then(expressionPrime()).array().map(nestLeft); };\nvar expressionPrime = function () { return masala_parser_1.F.lazy(expression3).optrep(); };\nvar nestLeft = function (v) { return v.reduce(function (prev, cur) { return new App(prev, cur, { start: prev.pos.start, end: cur.pos.end }); }); };\nvar specialCases = function (code) {\n    if (code == 'let' || code.endsWith(' let')) {\n        return {\n            accepted: false,\n            issuePosition: { start: code.length - 3, end: code.length },\n            message: 'Failed to parse'\n        };\n    }\n    if (code == 'in' || code.endsWith(' in')) {\n        return {\n            accepted: false,\n            issuePosition: { start: code.length - 2, end: code.length },\n            message: 'Failed to parse'\n        };\n    }\n};\nvar parser = genlex.use(expression1().then(masala_parser_1.F.eos().drop()).single());\nfunction parse(code, forResponse) {\n    if (forResponse === void 0) { forResponse = false; }\n    var specialCase = specialCases(code);\n    if (specialCase) {\n        if (forResponse)\n            return specialCase;\n        throw new ParseError('Failed to parse:\\n\\t' + code + '\\n\\t' + ' '.repeat(specialCase.issuePosition.start) + '^');\n    }\n    var response = parser.parse(masala_parser_1.Streams.ofString(code));\n    if (forResponse) {\n        if (response.isAccepted())\n            return { accepted: true, value: response.value };\n        return { accepted: false, issuePosition: { start: response.location(), end: code.length }, message: 'Failed to parse' };\n    }\n    if (response.isAccepted())\n        return response.value;\n    throw new ParseError('Failed to parse:\\n\\t' + code + '\\n\\t' + ' '.repeat(response.location()) + '^');\n}\nexports.parse = parse;\nvar typeUtils = { number: number, char: char, boolean: boolean, f: f, list: list, tuple: tuple, maybe: maybe, either: either, a: a, b: b, c: c, d: d, pt: pt, standardCtx: standardCtx };\nexports.typeUtils = typeUtils;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.apply = exports.infer = exports.unify = exports.combine = exports.substitute = exports.TypeInferenceError = void 0;\nvar language_1 = require(\"language\");\nvar TypeInferenceError = /** @class */ (function (_super) {\n    __extends(TypeInferenceError, _super);\n    function TypeInferenceError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"TypeInferenceError\";\n        return _this;\n    }\n    return TypeInferenceError;\n}(Error));\nexports.TypeInferenceError = TypeInferenceError;\nfunction substitute(substitution, arg) {\n    var context = arg;\n    var mappedContext = {};\n    for (var key in context) {\n        mappedContext[key] = apply(context[key], substitution);\n    }\n    return mappedContext;\n}\nexports.substitute = substitute;\n/** Combines substitutions. Applies leftmost substitution first, e.g. combine(a, b).apply(e) == e.apply(a).apply(b) */\nfunction combine() {\n    var substitutions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        substitutions[_i] = arguments[_i];\n    }\n    if (substitutions.length === 0)\n        return {};\n    if (substitutions.length === 1)\n        return substitutions[0];\n    if (substitutions.length > 2)\n        return combine(substitutions[0], combine.apply(void 0, substitutions.slice(1)));\n    var a = substitutions[0];\n    var b = substitutions[1];\n    var newSubstitution = {};\n    for (var key in a) {\n        newSubstitution[key] = apply(a[key], b);\n    }\n    for (var key in b) {\n        if (!(key in a)) {\n            newSubstitution[key] = b[key];\n        }\n    }\n    return newSubstitution;\n}\nexports.combine = combine;\nfunction unify(type1, type2) {\n    var _a;\n    if (type1 instanceof language_1.TypeVar) {\n        if (type2 instanceof language_1.TypeVar && type1.name == type2.name) {\n            return {};\n        }\n        if (contains(type2, type1)) {\n            throw new TypeInferenceError('Occurs check failed. `' + type1.toString() + '` occurs in `' + type2.toString() + '` so unifying them would create an infinite type.');\n        }\n        return _a = {}, _a[type1.name] = type2, _a;\n    }\n    if (type2 instanceof language_1.TypeVar) {\n        return unify(type2, type1);\n    }\n    if (type1 instanceof language_1.TypeFuncApp && type2 instanceof language_1.TypeFuncApp) {\n        if (type1.constructorName !== type2.constructorName) {\n            throw new TypeInferenceError('Could not unify types `' + type1.toString() + '` and `' + type2.toString() + '` with different constructors `' + type1.constructorName + '` and `' + type2.constructorName + '`');\n        }\n        if (type1.args.length !== type2.args.length) {\n            throw new TypeInferenceError('Could not unify types `' + type1.toString() + '` and `' + type2.toString() + '` with different argument list lengths `' + type1.args.length + '` and `' + type2.args.length + '`');\n        }\n        var sub = {};\n        for (var i = 0; i < type1.args.length; i++) {\n            sub = combine(sub, unify(apply(type1.args[i], sub), apply(type2.args[i], sub)));\n        }\n        return sub;\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nexports.unify = unify;\nfunction unique(xs) {\n    var vs = [];\n    new Set(xs).forEach(function (x) { return vs.push(x); });\n    return vs;\n}\n/** a \\ b */\nfunction diff(a, b) {\n    var bset = new Set(b);\n    return a.filter(function (v) { return !bset.has(v); });\n}\nfunction freeVars(type) {\n    if (type instanceof language_1.PolyType) {\n        return diff(freeVars(type.monoType), type.quantifiedVars);\n    }\n    if (type instanceof language_1.TypeVar) {\n        return [type.name];\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return type.args.map(freeVars).reduce(function (acc, cur) { return __spreadArrays(acc, cur); }, []);\n    }\n    if (type) {\n        // type: Context\n        return Object.values(type).map(freeVars).reduce(function (acc, cur) { return __spreadArrays(acc, cur); }, []);\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction generalise(ctx, type) {\n    return new language_1.PolyType(unique(diff(freeVars(type), freeVars(ctx))), type);\n}\nfunction infer(expr, forResponse, ctx) {\n    if (forResponse === void 0) { forResponse = false; }\n    if (ctx === void 0) { ctx = language_1.typeUtils.standardCtx; }\n    var typeCounter = 0;\n    var freshTypeName = function () { return \"t\" + typeCounter++; };\n    if (!forResponse)\n        return _infer(expr, ctx, freshTypeName)[0];\n    var steps = [];\n    var logger = function (message, notes) {\n        steps.push({ message: message, ast: cloneAst(expr, notes) });\n    };\n    try {\n        return {\n            accepted: true,\n            value: {\n                type: _infer(expr, ctx, freshTypeName, logger)[0],\n                steps: steps\n            }\n        };\n    }\n    catch (e) {\n        return {\n            accepted: false,\n            value: {\n                steps: steps\n            },\n            issuePosition: e.name == TypeInferenceError.name ? e.expr.pos : expr.pos,\n            message: e.message\n        };\n    }\n}\nexports.infer = infer;\nvar cloneAst = function (expr, notes) {\n    if (expr instanceof language_1.CharLiteral)\n        return new language_1.CharLiteral(expr.value, expr.pos, notes.get(expr));\n    if (expr instanceof language_1.NumberLiteral)\n        return new language_1.NumberLiteral(expr.value, expr.pos, notes.get(expr));\n    if (expr instanceof language_1.Var)\n        return new language_1.Var(expr.name, expr.pos, notes.get(expr));\n    if (expr instanceof language_1.App)\n        return new language_1.App(cloneAst(expr.func, notes), cloneAst(expr.arg, notes), expr.pos, notes.get(expr));\n    if (expr instanceof language_1.Abs)\n        return new language_1.Abs(expr.param, cloneAst(expr.body, notes), expr.pos, notes.get(expr));\n    if (expr instanceof language_1.Let)\n        return new language_1.Let(expr.param, cloneAst(expr.def, notes), cloneAst(expr.body, notes), expr.pos, notes.get(expr));\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n};\nvar highlight = function (expr) {\n    var notes = new Map();\n    notes.set(expr, 'highlight');\n    return notes;\n};\nvar str = function (substitution, except) { return ('{ ' + Object.keys(substitution).filter(function (k) { return k !== except; }).map(function (k) { return k + ' ↦ ' + substitution[k].toString(); }).join(', ') + ' }').replace('{  }', '{}'); };\nfunction _infer(expr, ctx, freshTypeName, logger) {\n    var _a, _b;\n    if (logger === void 0) { logger = function () { }; }\n    if (expr instanceof language_1.CharLiteral) {\n        logger('We know the primitive `' + expr.toString() + '` is a `Char`', highlight(expr));\n        return [inst(new language_1.PolyType([], new language_1.TypeFuncApp('Char')), freshTypeName), {}];\n    }\n    if (expr instanceof language_1.NumberLiteral) {\n        logger('We know the primitive `' + expr.toString() + '` is an `Int`', highlight(expr));\n        return [inst(new language_1.PolyType([], new language_1.TypeFuncApp('Int')), freshTypeName), {}];\n    }\n    if (expr instanceof language_1.Var) {\n        var type = ctx[expr.name];\n        if (!type) {\n            logger('We try to look up the variable `' + expr.toString() + '` but find it is not in scope. We stop here as this is an error.', highlight(expr));\n            var err = new TypeInferenceError('`' + expr.name + '` is not in scope');\n            err.expr = expr;\n            throw err;\n        }\n        var instantiatedType = inst(type, freshTypeName);\n        logger('We can look up the variable `' + expr.toString() + '` and find it has type `' + type.toString() + (type.quantifiedVars.length ? '`\\nWe instatiate this type with fresh type variables to get `' + instantiatedType.toString() + '`' : ''), highlight(expr));\n        return [instantiatedType, {}];\n    }\n    if (expr instanceof language_1.App) {\n        var _c = _infer(expr.func, ctx, freshTypeName, logger), funcType = _c[0], funcSubstitution = _c[1];\n        var _d = _infer(expr.arg, substitute(funcSubstitution, ctx), freshTypeName, logger), argType = _d[0], argSubstitution = _d[1];\n        var t = new language_1.TypeVar(freshTypeName());\n        // Give an easier to read and understand message if we can, otherwise default to the more general case\n        var firstPartOfLogMessage = (funcType instanceof language_1.TypeFuncApp && funcType.constructorName == '->')\n            ? 'In function application, the function must accept the expected argument type.\\nBefore unification, the function has type `' + funcType.toString() + '`\\n\\nTherefore we unify:\\nFunction accepts `' + funcType.args[0].toString() + '`\\nArgument has type `' + argType.toString() + '`\\n\\n'\n            : 'In function application, the function must accept the expected argument type and returns some other type.\\n\\nTherefore we unify:\\nFunction type `' + funcType.toString() + '`\\nArgument to fresh type `' + new language_1.TypeFuncApp(\"->\", argType, t).toString() + '`\\n\\n';\n        var unifiedSubstitution = void 0;\n        try {\n            unifiedSubstitution = unify(apply(funcType, argSubstitution), new language_1.TypeFuncApp(\"->\", argType, t));\n        }\n        catch (err) {\n            logger(firstPartOfLogMessage + 'However, these two types are not unifiable. We stop here as this is an error.\\n\\nMore details:\\n' + err.message, highlight(expr));\n            err.expr = expr;\n            throw err;\n        }\n        var exprType = apply(t, unifiedSubstitution);\n        logger(firstPartOfLogMessage + 'This gives the substitution `' + str(unifiedSubstitution, t.name) + '`\\nAnd the function\\'s return type as `' + exprType.toString() + '`', highlight(expr));\n        return [exprType, combine(funcSubstitution, argSubstitution, unifiedSubstitution)];\n    }\n    if (expr instanceof language_1.Abs) {\n        var t = new language_1.TypeVar(freshTypeName());\n        logger('Our function definition binds `' + expr.param + '` in the body to the fresh type `' + t.toString() + '`', highlight(expr));\n        var _e = _infer(expr.body, __assign(__assign({}, ctx), (_a = {}, _a[expr.param] = new language_1.PolyType([], t), _a)), freshTypeName, logger), bodyType = _e[0], bodySubstitution = _e[1];\n        var type = apply(new language_1.TypeFuncApp(\"->\", t, bodyType), bodySubstitution);\n        logger((bodySubstitution[t.name] ? 'We apply the substitution `{ ' + t.name + ' ↦ ' + bodySubstitution[t.name].toString() + ' }` to get the parameter\\'s type `' + type.args[0].toString() + '`.\\n' : '') + 'The return type is given by the function body\\'s type `' + type.args[1].toString() + '`\\nTherefore the overall type is `' + type.toString() + '`', highlight(expr));\n        return [type, bodySubstitution];\n    }\n    if (expr instanceof language_1.Let) {\n        var _f = _infer(expr.def, ctx, freshTypeName, logger), defType = _f[0], defSubstitution = _f[1];\n        var generalisedDefType = generalise(substitute(defSubstitution, ctx), defType);\n        logger('Our let statement binds `' + expr.param + '` in the body to the type `' + generalisedDefType.toString() + '`', highlight(expr));\n        var _g = _infer(expr.body, __assign(__assign({}, substitute(defSubstitution, ctx)), (_b = {}, _b[expr.param] = generalisedDefType, _b)), freshTypeName, logger), bodyType = _g[0], bodySubstitution = _g[1];\n        logger('Our let statement then takes its body\\'s type `' + bodyType.toString() + '`', highlight(expr));\n        return [bodyType, combine(defSubstitution, bodySubstitution)];\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction inst(type, freshTypeName, from, to) {\n    if (from === void 0) { from = []; }\n    if (to === void 0) { to = []; }\n    if (type instanceof language_1.TypeVar) {\n        var i = from.indexOf(type.name);\n        return (i === -1) ? type : new language_1.TypeVar(to[i]);\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return new (language_1.TypeFuncApp.bind.apply(language_1.TypeFuncApp, __spreadArrays([void 0, type.constructorName], type.args.map(function (arg) { return inst(arg, freshTypeName, from, to); }))))();\n    }\n    if (type instanceof language_1.PolyType) {\n        return inst(type.monoType, freshTypeName, type.quantifiedVars, type.quantifiedVars.map(freshTypeName));\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction apply(type, substitution) {\n    if (type instanceof language_1.TypeVar) {\n        return type.name in substitution ? substitution[type.name] : type;\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return new (language_1.TypeFuncApp.bind.apply(language_1.TypeFuncApp, __spreadArrays([void 0, type.constructorName], type.args.map(function (arg) { return apply(arg, substitution); }))))();\n    }\n    if (type instanceof language_1.PolyType) {\n        return new language_1.PolyType(type.quantifiedVars, apply(type.monoType, substitution));\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nexports.apply = apply;\nfunction contains(type, other) {\n    if (type instanceof language_1.TypeVar) {\n        return type.name == other.name;\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return type.args.some(function (arg) { return contains(arg, other); });\n    }\n    if (type instanceof language_1.PolyType) {\n        return contains(type.monoType, other) && !type.quantifiedVars.includes(other.name);\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\n","const dev = {\n    analytics: {\n        enabled: true,\n        url: 'https://fghxabnlad.execute-api.eu-west-1.amazonaws.com/'\n    }\n};\n\nconst prod = {\n    analytics: {\n        enabled: true,\n        url: 'https://5lpondcp9g.execute-api.eu-west-1.amazonaws.com/'\n    }\n};\n\nconst config = process.env.REACT_APP_STAGE === 'prod' ? prod : dev;\nexport default config;","import config from \"./config\";\n\nconst useAnalytics = config.analytics.enabled && navigator.doNotTrack !== \"1\";\nconst streamId = Math.random().toString(36).slice(2);\n\nexport const a = useAnalytics ? (data: any) => {\n  fetch(config.analytics.url, { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify({ project: 'cs310', streamId, data }) })\n} : () => {};\n\nconst debounce = <T extends Function>(fn: T, delayInMiliseconds: number): T => {\n  let timeout: NodeJS.Timeout | undefined;\n  return ((...args: any) => {\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      timeout = undefined;\n      fn(...args);\n    }, delayInMiliseconds)\n  }) as any as T;\n}\n\nexport const b = debounce(a, 1000);\n\nexport default a;","import React, { ReactNode } from 'react';\nimport { Expr, Var, App, Abs, Let, NumberLiteral, CharLiteral } from 'language'\n\ntype HoverCallback = (active: boolean, p: { start: number, end: number }) => void; \n\nfunction ASTView({ ast, hoverCallback }: { ast: Expr, hoverCallback: HoverCallback }) {\n    return <div className=\"ast-view\"><NodeView node={ast} hoverCallback={hoverCallback} /></div>\n}\n\nfunction NodeView({ node, hoverCallback }: { node: Expr, hoverCallback: HoverCallback }) {\n    if (node instanceof CharLiteral || node instanceof NumberLiteral) {\n        return <NodeWrapperView node={node} hoverCallback={hoverCallback}>{node.value}</NodeWrapperView>;\n    }\n\n    if (node instanceof Var) {\n        return <NodeWrapperView node={node} hoverCallback={hoverCallback}>{node.name}</NodeWrapperView>;\n    }\n\n    if (node instanceof App) {\n        return <>\n            <NodeWrapperView node={node} hoverCallback={hoverCallback}><span className=\"sans-serif\">Function application</span></NodeWrapperView>\n            <NodeChildView><NodeView node={node.func} hoverCallback={hoverCallback} /></NodeChildView>\n            <NodeChildView><NodeView node={node.arg} hoverCallback={hoverCallback}/></NodeChildView>\n        </>;\n    }\n\n    if (node instanceof Abs) {\n        return <>\n            <NodeWrapperView node={node} hoverCallback={hoverCallback}>λ{node.param}</NodeWrapperView>\n            <NodeChildView symbol='->'><NodeView node={node.body} hoverCallback={hoverCallback}/></NodeChildView>\n        </>\n    }\n\n    if (node instanceof Let) {\n        return <>\n            <NodeWrapperView node={node} hoverCallback={hoverCallback}>let {node.param}</NodeWrapperView>\n            <NodeChildView symbol='='><NodeView node={node.def} hoverCallback={hoverCallback}/></NodeChildView>\n            <NodeChildView symbol='in'><NodeView node={node.body} hoverCallback={hoverCallback}/></NodeChildView>\n        </>\n    }\n\n    throw new Error('Attempted to display a node of invalid type ' + typeof node);\n}\n\nfunction NodeWrapperView({ children, node, hoverCallback }: { children: ReactNode, node: Expr, hoverCallback: HoverCallback }) {\n    return <div className={\"ast-node \" + (node.notes || '')} onMouseOver={() => hoverCallback(true, node.pos)} onMouseOut={() => hoverCallback(false, node.pos)}>{children}</div>;\n}\n\nfunction NodeChildView({ children, symbol }: { children: ReactNode, symbol?: string }) {\n    return <div className=\"ast-child\" data-symbol={symbol}>{children}</div>\n}\n\nexport default ASTView;","import React, { useEffect } from 'react';\nimport { parse } from 'language'\nimport { infer } from 'algorithm-w'\nimport ASTView from './ASTView';\n\nexport interface Highlight {\n  start: number;\n  end: number;\n  className: string;\n}\n\nfunction ResultView({ code, setHighlights }: { code: string, setHighlights: (h: Highlight[]) => void }) {\n  // Parse the code, highlighting any errors\n  const parseResult = parse(code, true);\n  useEffect(() => setHighlights(parseResult.accepted ? [] : [{ start: parseResult.issuePosition.start, end: parseResult.issuePosition.end, className: 'highlight-error' }]), [parseResult, setHighlights]);\n\n  // Infer the types, highlighting any errors\n  const inferenceResult = !parseResult.accepted ? undefined! : infer(parseResult.value, true);\n  useEffect(() => inferenceResult && setHighlights(inferenceResult.accepted ? [] : [{ start: inferenceResult.issuePosition.start, end: inferenceResult.issuePosition.end, className: 'highlight-error' }]), [inferenceResult, setHighlights]);\n\n  if (!parseResult.accepted) {\n    return <>\n      <h2>Parse error</h2>\n      <p>{parseResult.message}</p>\n    </>;\n  }\n\n  const hoverCallback = createHoverCallback(setHighlights, inferenceResult.accepted ? [] : [{ start: inferenceResult.issuePosition.start, end: inferenceResult.issuePosition.end, className: 'highlight-error' }]);\n  if (inferenceResult.value!.steps.length === 0) {\n    <>\n      <h2>Type-inference error</h2>\n      <p>Something went wrong trying to infer types</p>\n\n      <h2>AST</h2>\n      <ASTView ast={parseResult.value} hoverCallback={hoverCallback} />\n    </>\n  }\n\n  return <>    \n    {inferenceResult.accepted\n    ? <><h2>Expression type</h2><p><code>{inferenceResult.value.type.toString()}</code></p></>\n    : <><h2>Type error</h2><p>The expression does not have a valid type</p></>}\n\n    <h2>Type derivation</h2>\n    {inferenceResult.value!.steps.map((step, i) => <div key={i} className='type-derivation-step'><h3>Step {i+1}</h3><p>{step.message.split('`').map((s, j) => j % 2 === 0 ? s : <code key={j}>{s}</code>)}</p><ASTView ast={step.ast} hoverCallback={hoverCallback} /></div>)}\n  </>;\n}\n\nconst createHoverCallback = (setHighlights: (h: Highlight[]) => void, otherHighlights: Highlight[]) => (active: boolean, p: { start: number, end: number }) => {\n  setHighlights(active ? [...otherHighlights, { start: p.start, end: p.end, className: 'highlight-white' }] : otherHighlights);\n}\n\nexport default ResultView;","import React, { useMemo, useState } from 'react';\nimport './Main.css';\nimport ResultView, { Highlight } from './ResultView';\nimport { typeUtils } from 'language';\nimport a, { b } from './analytics';\n\nconst body = document.getElementById('body') || { style: { overflow: '' } };\n\nfunction Main() {\n  const [code, setCode] = useState<string>('map not []');\n  const [highlights, setHighlights] = useState<Highlight[]>([]);\n  const [showingHelp, setShowingHelp] = useState<boolean>(false);\n  const showHelp = () => { setShowingHelp(true); a({ name: 'help', value: 'show' }); }\n  const hideHelp = () => { setShowingHelp(false); a({ name: 'help', value: 'hide' });  }\n\n  body.style.overflow = showingHelp ? 'hidden' : '';\n\n  const resultview = useMemo(() => code && <ResultView code={code} setHighlights={setHighlights} />, [code]);\n\n  return (\n    <div id=\"main\">\n      {showingHelp && <div className=\"modal\" onClick={(e) => { if ((e.target as any).className === 'modal') hideHelp() }}>\n        <div className=\"modal-content\">\n          <button className=\"sans-serif\" onClick={() => hideHelp()}>Close</button>\n          <h2>Language reference</h2>\n          <p>The language is similar in syntax to Haskell. All functions are applied in prefix notation, i.e. <code>+ 3 4</code> instead of <code>3 + 4</code>. Anonymous functions only take one parameter, i.e. <code>\\x -{'>'} \\y -{'>'} y x</code> instead of <code>\\x y -{'>'} y x</code>.</p>\n          <p>The type constructors available are:</p>\n          <ul>\n            <li><code>Int</code></li>\n            <li><code>Char</code></li>\n            <li><code>Bool</code></li>\n            <li><code>-{'>'}</code> for functions</li>\n            <li><code>[]</code> for lists</li>\n            <li><code>,</code>, <code>,,</code>, <code>,,,</code> etc. for tuples</li>\n            <li><code>Maybe</code></li>\n            <li><code>Either</code></li>\n          </ul>\n          <p>The available set of built-in functions and their types are:</p>\n          <ul>\n            {Object.entries(typeUtils.standardCtx).filter(([name]) => name[0] !== ',').map(([name, type]) => <li key={name}><code>{name} :: {type?.toString()}</code></li>)}\n          </ul>\n        </div>\n      </div>}\n\n      <h1>interactive type inference</h1>\n      <h2>\n        Play with algorithm W in your browser.\n      </h2>\n      <p>Type inference is the ability to determine an expression's type in a language. Hindley-Milner (HM) is a typed λ-calculus which allows for complete type inference without explicit type annotations. Haskell's type system is based on HM.</p>\n      <p>This tool allows you to enter expressions in syntax similar to Haskell and view how a type inference algorithm (algorithm W) could work out the types. A full list of built-in functions and their types is available <button className=\"sans-serif\" onClick={() => showHelp()} data-testid=\"help-open-button\">here</button>. Expressions must be given in prefix notation, i.e. <SetCodeButton value='+ 3 4' setCode={setCode} /> instead of <SetCodeButton value='3 + 4' setCode={setCode} />.</p>\n      <p>Usage data such as button clicks and evaluated expressions may be collected to evaluate and improve the tool.</p>\n      <h2>Samples:\n        <SetCodeButton value='4' setCode={setCode} />\n        <SetCodeButton value='not' setCode={setCode} />\n        <SetCodeButton value='odd 5' setCode={setCode} />\n        <SetCodeButton value='map not []' setCode={setCode} />\n        <SetCodeButton value='fst' setCode={setCode} /><br className=\"md-only\" />\n        <SetCodeButton value='Just' setCode={setCode} />\n        <SetCodeButton value='let x = 3 in (+, x)' setCode={setCode} />\n        <SetCodeButton value='\\x -> / x 2' setCode={setCode} />\n        <SetCodeButton value=': 23 [1]' setCode={setCode} />\n      </h2>\n      <div className='code-container'>\n        <input placeholder=\"Enter code...\" value={code} onChange={e => { setCode(e.target.value); b({ name: 'codeChange', value: e.target.value }); }} />\n        {code && highlights.map((h, i) => <p key={i}>{code.slice(0, h.start)}<span className={h.className}>{code.slice(h.start, h.end)}</span>{code.slice(h.end)}</p>)}\n      </div>\n      {resultview}\n    </div>\n  );\n}\n\nfunction SetCodeButton({ value, setCode }: { value: string, setCode: (code: string) => void }) {\n  return <button onClick={() => { setCode(value); a({ name: 'codeButtonSet', value }); }}>{value}</button>\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport a from './analytics';\nimport Main from './Main';\n\na({ name: 'load' });\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}