{"version":3,"sources":["../../algorithm-w/dist/index.js","../../language/dist/index.js","ASTView.tsx","ResultView.tsx","Main.tsx","index.tsx"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__spreadArrays","il","r","k","a","j","jl","defineProperty","exports","value","infer","unify","combine","substitute","TypeInferenceError","language_1","require","_super","message","_this","name","Error","substitution","arg","context","mappedContext","key","substitutions","_i","slice","newSubstitution","type1","type2","_a","TypeVar","contains","JSON","stringify","TypeFuncApp","constructorName","args","sub","diff","bset","Set","filter","v","has","freeVars","type","PolyType","monoType","quantifiedVars","map","reduce","acc","cur","values","_infer","expr","ctx","freshTypeName","_b","CharLiteral","inst","NumberLiteral","Var","App","_c","func","funcType","funcSubstitution","_d","argType","argSubstitution","unifiedSubstitution","Abs","_e","body","param","bodyType","bodySubstitution","Let","_f","def","defType","defSubstitution","_g","generalise","from","to","indexOf","bind","other","some","includes","forResponse","typeUtils","standardCtx","typeCounter","accepted","e","issuePosition","start","end","ParseError","parse","parser_1","toString","fun","join","number","char","boolean","f","one","two","extra","list","tuple","monoTypes","repeat","maybe","either","left","right","c","pt","mt","genlex","GenLex","identifier","tokenize","C","charIn","rep","charLiteral","stringLiteral","numberLiteral","N","backslash","arrow","string","lparen","rparen","letTok","equal","inTok","expression2","F","try","optApp","LEAF","or","ABS","LET","PAR","expression3","toCharArray","chars","split","pop","drop","then","ABS_","single","lazy","at","LET_","parser","expressionPrime","array","nestLeft","optrep","prev","use","eos","code","response","Streams","ofString","isAccepted","location","NodeView","node","NodeWrapperView","className","NodeChildView","symbol","children","data-symbol","ASTView","ast","ResultView","setHighlights","parseResult","useMemo","useEffect","inferenceResult","Main","useState","setCode","highlights","onClick","placeholder","onChange","target","h","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61d864e6.chunk.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.apply = exports.infer = exports.unify = exports.combine = exports.substitute = exports.TypeInferenceError = void 0;\nvar language_1 = require(\"language\");\nvar TypeInferenceError = /** @class */ (function (_super) {\n    __extends(TypeInferenceError, _super);\n    function TypeInferenceError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"TypeInferenceError\";\n        return _this;\n    }\n    return TypeInferenceError;\n}(Error));\nexports.TypeInferenceError = TypeInferenceError;\nfunction substitute(substitution, arg) {\n    var context = arg;\n    var mappedContext = {};\n    for (var key in context) {\n        mappedContext[key] = apply(context[key], substitution);\n    }\n    return mappedContext;\n}\nexports.substitute = substitute;\n/** Combines substitutions. Applies leftmost substitution first, e.g. combine(a, b).apply(e) == e.apply(a).apply(b) */\nfunction combine() {\n    var substitutions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        substitutions[_i] = arguments[_i];\n    }\n    if (substitutions.length === 0)\n        return {};\n    if (substitutions.length === 1)\n        return substitutions[0];\n    if (substitutions.length > 2)\n        return combine(substitutions[0], combine.apply(void 0, substitutions.slice(1)));\n    var a = substitutions[0];\n    var b = substitutions[1];\n    var newSubstitution = {};\n    for (var key in a) {\n        newSubstitution[key] = apply(a[key], b);\n    }\n    for (var key in b) {\n        if (!(key in a)) {\n            newSubstitution[key] = b[key];\n        }\n    }\n    return newSubstitution;\n}\nexports.combine = combine;\nfunction unify(type1, type2) {\n    var _a;\n    if (type1 instanceof language_1.TypeVar) {\n        if (contains(type2, type1)) {\n            throw new TypeInferenceError('Contains/occurs check failed with ' + JSON.stringify(type1) + ' and ' + JSON.stringify(type2));\n        }\n        return _a = {}, _a[type1.name] = type2, _a;\n    }\n    if (type2 instanceof language_1.TypeVar) {\n        return unify(type2, type1);\n    }\n    if (type1 instanceof language_1.TypeFuncApp && type2 instanceof language_1.TypeFuncApp) {\n        if (type1.constructorName !== type2.constructorName) {\n            throw new TypeInferenceError('Could not unify type function applications with different constructors \\'' + type1.constructorName + '\\' and \\'' + type2.constructorName + '\\'');\n        }\n        if (type1.args.length !== type2.args.length) {\n            throw new TypeInferenceError('Could not unify type function applications with different argument list lengths ' + JSON.stringify(type1) + ' and ' + JSON.stringify(type2));\n        }\n        var sub = {};\n        for (var i = 0; i < type1.args.length; i++) {\n            sub = combine(unify(apply(type1.args[i], sub), apply(type2.args[i], sub)), sub);\n        }\n        return sub;\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nexports.unify = unify;\n/** a \\ b */\nfunction diff(a, b) {\n    var bset = new Set(b);\n    return a.filter(function (v) { return !bset.has(v); });\n}\nfunction freeVars(type) {\n    if (type instanceof language_1.PolyType) {\n        return diff(freeVars(type.monoType), type.quantifiedVars);\n    }\n    if (type instanceof language_1.TypeVar) {\n        return [type.name];\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return type.args.map(freeVars).reduce(function (acc, cur) { return __spreadArrays(acc, cur); }, []);\n    }\n    if (type) {\n        // type: Context\n        return Object.values(type).map(freeVars).reduce(function (acc, cur) { return __spreadArrays(acc, cur); }, []);\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction generalise(ctx, type) {\n    return new language_1.PolyType(diff(freeVars(type), freeVars(ctx)), type);\n}\nfunction infer(expr, forResponse, ctx) {\n    if (forResponse === void 0) { forResponse = false; }\n    if (ctx === void 0) { ctx = language_1.typeUtils.standardCtx; }\n    var typeCounter = 0;\n    var freshTypeName = function () { return \"t\" + typeCounter++; };\n    if (!forResponse)\n        return _infer(expr, ctx, freshTypeName)[0];\n    try {\n        return {\n            accepted: true,\n            value: _infer(expr, ctx, freshTypeName)[0]\n        };\n    }\n    catch (e) {\n        return {\n            accepted: false,\n            issuePosition: { start: 0, end: 0 },\n            message: e.message\n        };\n    }\n}\nexports.infer = infer;\nfunction _infer(expr, ctx, freshTypeName) {\n    var _a, _b;\n    if (expr instanceof language_1.CharLiteral) {\n        return [inst(new language_1.PolyType([], new language_1.TypeFuncApp('char')), freshTypeName), {}];\n    }\n    if (expr instanceof language_1.NumberLiteral) {\n        return [inst(new language_1.PolyType([], new language_1.TypeFuncApp('number')), freshTypeName), {}];\n    }\n    if (expr instanceof language_1.Var) {\n        var type = ctx[expr.name];\n        if (!type) {\n            throw new TypeInferenceError(expr.name + ' is not in scope');\n        }\n        return [inst(type, freshTypeName), {}];\n    }\n    if (expr instanceof language_1.App) {\n        var _c = _infer(expr.func, ctx, freshTypeName), funcType = _c[0], funcSubstitution = _c[1];\n        var _d = _infer(expr.arg, substitute(funcSubstitution, ctx), freshTypeName), argType = _d[0], argSubstitution = _d[1];\n        var t = new language_1.TypeVar(freshTypeName());\n        var unifiedSubstitution = unify(apply(funcType, argSubstitution), new language_1.TypeFuncApp(\"->\", argType, t));\n        return [apply(t, unifiedSubstitution), combine(funcSubstitution, argSubstitution, unifiedSubstitution)];\n    }\n    if (expr instanceof language_1.Abs) {\n        var t = new language_1.TypeVar(freshTypeName());\n        var _e = _infer(expr.body, __assign(__assign({}, ctx), (_a = {}, _a[expr.param] = new language_1.PolyType([], t), _a)), freshTypeName), bodyType = _e[0], bodySubstitution = _e[1];\n        return [apply(new language_1.TypeFuncApp(\"->\", t, bodyType), bodySubstitution), bodySubstitution];\n    }\n    if (expr instanceof language_1.Let) {\n        var _f = _infer(expr.def, ctx, freshTypeName), defType = _f[0], defSubstitution = _f[1];\n        var _g = _infer(expr.body, __assign(__assign({}, substitute(defSubstitution, ctx)), (_b = {}, _b[expr.param] = generalise(substitute(defSubstitution, ctx), defType), _b)), freshTypeName), bodyType = _g[0], bodySubstitution = _g[1];\n        return [bodyType, combine(defSubstitution, bodySubstitution)];\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction inst(type, freshTypeName, from, to) {\n    if (from === void 0) { from = []; }\n    if (to === void 0) { to = []; }\n    if (type instanceof language_1.TypeVar) {\n        var i = from.indexOf(type.name);\n        return (i === -1) ? type : new language_1.TypeVar(to[i]);\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return new (language_1.TypeFuncApp.bind.apply(language_1.TypeFuncApp, __spreadArrays([void 0, type.constructorName], type.args.map(function (arg) { return inst(arg, freshTypeName, from, to); }))))();\n    }\n    if (type instanceof language_1.PolyType) {\n        return inst(type.monoType, freshTypeName, type.quantifiedVars, type.quantifiedVars.map(freshTypeName));\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction apply(type, substitution) {\n    if (type instanceof language_1.TypeVar) {\n        return type.name in substitution ? substitution[type.name] : type;\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return new (language_1.TypeFuncApp.bind.apply(language_1.TypeFuncApp, __spreadArrays([void 0, type.constructorName], type.args.map(function (arg) { return apply(arg, substitution); }))))();\n    }\n    if (type instanceof language_1.PolyType) {\n        return new language_1.PolyType(type.quantifiedVars, apply(type.monoType, substitution));\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nexports.apply = apply;\nfunction contains(type, other) {\n    if (type instanceof language_1.TypeVar) {\n        return type.name == other.name;\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return type.args.some(function (arg) { return contains(arg, other); });\n    }\n    if (type instanceof language_1.PolyType) {\n        return contains(type.monoType, other) && !type.quantifiedVars.includes(other.name);\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.typeUtils = exports.ParseError = exports.parse = exports.PolyType = exports.TypeFuncApp = exports.TypeVar = exports.Let = exports.Abs = exports.App = exports.Var = exports.NumberLiteral = exports.CharLiteral = void 0;\nvar parser_1 = require(\"@masala/parser\");\nvar CharLiteral = /** @class */ (function () {\n    function CharLiteral(value) {\n        this.value = value;\n    }\n    CharLiteral.prototype.toString = function () {\n        return this.value;\n    };\n    return CharLiteral;\n}());\nexports.CharLiteral = CharLiteral;\nvar NumberLiteral = /** @class */ (function () {\n    function NumberLiteral(value) {\n        this.value = value;\n    }\n    NumberLiteral.prototype.toString = function () {\n        return this.value.toString();\n    };\n    return NumberLiteral;\n}());\nexports.NumberLiteral = NumberLiteral;\nvar Var = /** @class */ (function () {\n    function Var(name) {\n        this.name = name;\n    }\n    Var.prototype.toString = function () {\n        return this.name;\n    };\n    return Var;\n}());\nexports.Var = Var;\nvar App = /** @class */ (function () {\n    function App(fun, arg) {\n        this.func = fun;\n        this.arg = arg;\n    }\n    App.prototype.toString = function () {\n        return '(' + this.func.toString() + ' ' + this.arg.toString() + ')';\n    };\n    return App;\n}());\nexports.App = App;\nvar Abs = /** @class */ (function () {\n    function Abs(param, body) {\n        this.param = param;\n        this.body = body;\n    }\n    Abs.prototype.toString = function () {\n        return '(\\\\' + this.param + ' -> ' + this.body.toString() + ')';\n    };\n    return Abs;\n}());\nexports.Abs = Abs;\nvar Let = /** @class */ (function () {\n    function Let(param, def, body) {\n        this.param = param;\n        this.def = def;\n        this.body = body;\n    }\n    Let.prototype.toString = function () {\n        return '(let ' + this.param + ' = ' + this.def.toString() + ' in ' + this.body.toString() + ')';\n    };\n    return Let;\n}());\nexports.Let = Let;\nvar TypeVar = /** @class */ (function () {\n    function TypeVar(name) {\n        this.name = name;\n    }\n    TypeVar.prototype.toString = function () {\n        return this.name;\n    };\n    return TypeVar;\n}());\nexports.TypeVar = TypeVar;\nvar TypeFuncApp = /** @class */ (function () {\n    function TypeFuncApp(constructorName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        this.constructorName = constructorName;\n        this.args = args;\n    }\n    TypeFuncApp.prototype.toString = function () {\n        return this.constructorName + (this.args.length ? ' ' : '') + this.args.map(function (a) { return '(' + a.toString() + ')'; }).join(' ');\n    };\n    return TypeFuncApp;\n}());\nexports.TypeFuncApp = TypeFuncApp;\nvar PolyType = /** @class */ (function () {\n    function PolyType(quantifiedVars, monoType) {\n        this.quantifiedVars = quantifiedVars;\n        this.monoType = monoType;\n    }\n    PolyType.prototype.toString = function () {\n        return this.quantifiedVars.map(function (v) { return '∀' + v; }).join('') + ': ' + this.monoType.toString();\n    };\n    return PolyType;\n}());\nexports.PolyType = PolyType;\n/* Type utilities */\n// Utilities which make creating types easier\nvar number = new TypeFuncApp('number');\nvar char = new TypeFuncApp('char');\nvar boolean = new TypeFuncApp('boolean');\nvar f = function (one, two) {\n    var extra = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        extra[_i - 2] = arguments[_i];\n    }\n    if (extra.length === 0)\n        return new TypeFuncApp('->', one, two);\n    return new TypeFuncApp('->', one, f.apply(void 0, __spreadArrays([two, extra[0]], extra.slice(1))));\n};\nvar list = function (monoType) { return new TypeFuncApp('[]', monoType); };\nvar tuple = function () {\n    var monoTypes = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        monoTypes[_i] = arguments[_i];\n    }\n    if (monoTypes.length <= 1)\n        throw new Error('Tuple has too few elements, minimum of 2 but given ' + monoTypes.length);\n    if (monoTypes.length > 8)\n        throw new Error('Tuple has too many elements, maximum of 8 but given ' + monoTypes.length);\n    return new (TypeFuncApp.bind.apply(TypeFuncApp, __spreadArrays([void 0, ','.repeat(monoTypes.length - 1)], monoTypes)))();\n};\nvar maybe = function (monoType) { return new TypeFuncApp('Maybe', monoType); };\nvar either = function (left, right) { return new TypeFuncApp('Either', left, right); };\nvar a = new TypeVar('a');\nvar b = new TypeVar('b');\nvar c = new TypeVar('c');\nvar d = new TypeVar('d');\nvar pt = function (mt) { return new PolyType([], mt); };\n// Set up some basic things so the langauge is interesting\nvar standardCtx = {\n    // Arithmetic\n    '+': pt(f(number, number, number)),\n    '*': pt(f(number, number, number)),\n    '-': pt(f(number, number, number)),\n    '/': pt(f(number, number, number)),\n    '%': pt(f(number, number, number)),\n    'negate': pt(f(number, number)),\n    'abs': pt(f(number, number)),\n    'signum': pt(f(number, number)),\n    'even': pt(f(number, boolean)),\n    'odd': pt(f(number, boolean)),\n    // Booleans\n    'not': pt(f(boolean, boolean)),\n    '&&': pt(f(boolean, boolean, boolean)),\n    '||': pt(f(boolean, boolean, boolean)),\n    'True': pt(boolean),\n    'False': pt(boolean),\n    // Example variables\n    'myNumber': pt(number),\n    'myBoolean': pt(boolean),\n    // Lists\n    '[]': new PolyType(['a'], list(a)),\n    ':': new PolyType(['a'], f(a, list(a), list(a))),\n    'cons': new PolyType(['a'], f(a, list(a), list(a))),\n    '++': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'head': new PolyType(['a'], f(list(a), a)),\n    'last': new PolyType(['a'], f(list(a), a)),\n    'tail': new PolyType(['a'], f(list(a), list(a))),\n    'init': new PolyType(['a'], f(list(a), list(a))),\n    'uncons': new PolyType(['a'], f(list(a), maybe(tuple(a, list(a))))),\n    'null': new PolyType(['a'], f(list(a), boolean)),\n    'length': new PolyType(['a'], f(list(a), number)),\n    'map': new PolyType(['a', 'b'], f(f(a, b), list(a), list(b))),\n    'reverse': new PolyType(['a'], f(list(a), list(a))),\n    'intersperse': new PolyType(['a'], f(a, list(a), list(a))),\n    'intercalate': new PolyType(['a'], f(list(a), list(list(a)), list(a))),\n    'transpose': new PolyType(['a'], f(list(list(a)), list(list((a))))),\n    'subsequences': new PolyType(['a'], f(list(a), list(list((a))))),\n    'permutations': new PolyType(['a'], f(list(a), list(list((a))))),\n    'foldl': new PolyType(['a'], f(f(b, a, b), b, list(a), b)),\n    'foldl\\'': new PolyType(['a'], f(f(b, a, b), b, list(a), b)),\n    'foldl1': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'foldl1\\'': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'foldr': new PolyType(['a'], f(f(a, b, b), b, list(a), b)),\n    'foldr1': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'concat': new PolyType(['a'], f(list(list(a)), list(a))),\n    'concatMap': new PolyType(['a'], f(f(a, list(a)), list(a), list(b))),\n    'and': pt(f(list(boolean), boolean)),\n    'or': pt(f(list(boolean), boolean)),\n    'any': new PolyType(['a'], f(f(a, boolean), list(a), boolean)),\n    'all': new PolyType(['a'], f(f(a, boolean), list(a), boolean)),\n    'sum': pt(f(list(number), number)),\n    'product': pt(f(list(number), number)),\n    'maximum': pt(f(list(number), number)),\n    'minimum': pt(f(list(number), number)),\n    'take': new PolyType(['a'], f(number, list(a), list(a))),\n    'drop': new PolyType(['a'], f(number, list(a), list(a))),\n    'splitAt': new PolyType(['a'], f(number, list(a), tuple(list(a), list(a)))),\n    'takeWhile': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'dropWhile': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'elem': new PolyType(['a'], f(a, list(a), boolean)),\n    'notElem': new PolyType(['a'], f(a, list(a), boolean)),\n    'lookup': new PolyType(['a', 'b'], f(a, list(tuple(a, b)), maybe(b))),\n    'find': new PolyType(['a'], f(f(a, boolean), list(a), maybe(a))),\n    'filter': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'partition': new PolyType(['a'], f(f(a, boolean), list(a), tuple(list(a), list(a)))),\n    '!!': new PolyType(['a'], f(list(a), number, a)),\n    'zip': new PolyType(['a', 'b'], f(list(a), list(b), list(tuple(a, b)))),\n    'zipWith': new PolyType(['a', 'b', 'c'], f(f(a, b, c), list(a), list(b), list(c))),\n    'unzip': new PolyType(['a', 'b'], f(list(tuple(a, b)), tuple(list(a), list(b)))),\n    'nub': new PolyType(['a'], f(list(a), list(a))),\n    'delete': new PolyType(['a'], f(a, list(a), list(a))),\n    '\\\\\\\\': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'union': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'intersect': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'sort': new PolyType(['a'], f(list(a), list(a))),\n    // Tuples\n    ',': new PolyType(['a', 'b'], f(a, b, tuple(a, b))),\n    ',,': new PolyType(['a', 'b', 'c'], f(a, b, c, tuple(a, b, c))),\n    ',,,': new PolyType(['a', 'b', 'c', 'd'], f(a, b, c, d, tuple(a, b, c, d))),\n    'fst': new PolyType(['a', 'b'], f(tuple(a, b), a)),\n    'snd': new PolyType(['a', 'b'], f(tuple(a, b), b)),\n    'curry': new PolyType(['a', 'b', 'c'], f(f(tuple(a, b), c), a, b, c)),\n    'uncurry': new PolyType(['a', 'b', 'c'], f(f(a, b, c), tuple(a, b), c)),\n    // Maybe\n    'Just': new PolyType(['a'], f(a, maybe(a))),\n    'Nothing': new PolyType(['a'], maybe(a)),\n    // Either\n    'Left': new PolyType(['a', 'b'], f(a, either(a, b))),\n    'Right': new PolyType(['a', 'b'], f(b, either(a, b))),\n    // Id\n    'id': new PolyType(['a'], f(a, a)),\n};\n/* Parser */\n// expr ::= identifier # var\n//        | ( \\ identifier -> expr ) # abs\n//        | ( expr )\n//        | expr expr # app\n//        | ( let identifier = expr in expr ) # let\n// expr ::= identifier expr' # var\n//        | ( \\ identifier -> expr ) expr' # abs\n//        | ( expr ) expr'\n//        | ( let identifier = expr in expr ) expr' # let\n// expr' ::= expr A' | eps # app\nvar ParseError = /** @class */ (function (_super) {\n    __extends(ParseError, _super);\n    function ParseError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"ParseError\";\n        return _this;\n    }\n    return ParseError;\n}(Error));\nexports.ParseError = ParseError;\nvar genlex = new parser_1.GenLex();\nvar identifier = genlex.tokenize(parser_1.C.charIn('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789*+-/%<>^:[]_|&,').rep().map(function (t) { return t.join(); }), 'identifier');\nvar charLiteral = genlex.tokenize(parser_1.C.charLiteral(), 'char');\nvar stringLiteral = genlex.tokenize(parser_1.C.stringLiteral(), 'string');\nvar numberLiteral = genlex.tokenize(parser_1.N.number(), 'number');\nvar backslash = genlex.tokenize(parser_1.C.char('\\\\'), 'backslash');\nvar arrow = genlex.tokenize(parser_1.C.string('->'), 'arrow');\nvar lparen = genlex.tokenize(parser_1.C.char('('), 'lparen');\nvar rparen = genlex.tokenize(parser_1.C.char(')'), 'rparen');\nvar letTok = genlex.tokenize(parser_1.C.string('let'), 'let');\nvar equal = genlex.tokenize(parser_1.C.char('='), 'equal');\nvar inTok = genlex.tokenize(parser_1.C.string('in'), 'in');\nvar expression1 = function () {\n    return parser_1.F.try(LET_())\n        .or(parser_1.F.try(ABS_()))\n        .or(parser_1.F.try(expression2()));\n};\nvar expression2 = function () {\n    return parser_1.F.try(optApp(LEAF()))\n        .or(parser_1.F.try(optApp(ABS())))\n        .or(parser_1.F.try(optApp(LET())))\n        .or(parser_1.F.try(optApp(PAR())));\n};\nvar expression3 = function () {\n    return parser_1.F.try(LEAF())\n        .or(parser_1.F.try(ABS()))\n        .or(parser_1.F.try(LET()))\n        .or(parser_1.F.try(PAR()));\n};\nvar toCharArray = function (string) {\n    var chars = string.split('');\n    var expr = new Var('[]');\n    while (chars.length) {\n        expr = new App(new App(new Var(':'), new CharLiteral(chars.pop())), expr);\n    }\n    return expr;\n};\n// We have to SHOUT as var and let are restricted keywords in JavaScript\nvar LEAF = function () { return parser_1.F.try(numberLiteral.map(function (value) { return new NumberLiteral(value); })).or(parser_1.F.try(stringLiteral.map(toCharArray))).or(parser_1.F.try(charLiteral.map(function (value) { return new CharLiteral(value); }))).or(parser_1.F.try(identifier.map(function (value) { return new Var(value); }))); };\nvar ABS = function () { return lparen.drop().then(ABS_()).then(rparen.drop()).single(); };\nvar ABS_ = function () { return backslash.drop().then(identifier).then(arrow.drop()).then(parser_1.F.lazy(expression2)).map(function (tuple) { return new Abs(tuple.at(0), tuple.at(1)); }); };\nvar PAR = function () { return lparen.drop().then(parser_1.F.lazy(expression2)).then(rparen.drop()).single(); };\nvar LET = function () { return lparen.drop().then(LET_()).then(rparen.drop()).single(); };\nvar LET_ = function () { return letTok.drop().then(identifier).then(equal.drop()).then(parser_1.F.lazy(expression2)).then(inTok.drop()).then(parser_1.F.lazy(expression2)).map(function (tuple) { return new Let(tuple.at(0), tuple.at(1), tuple.at(2)); }); };\nvar optApp = function (parser) { return parser.then(expressionPrime()).array().map(nestLeft); };\nvar expressionPrime = function () { return parser_1.F.lazy(expression3).optrep(); };\nvar nestLeft = function (v) { return v.reduce(function (prev, cur) { return new App(prev, cur); }); };\nvar parser = genlex.use(expression1().then(parser_1.F.eos().drop()).single());\nfunction parse(code, forResponse) {\n    if (forResponse === void 0) { forResponse = false; }\n    var response = parser.parse(parser_1.Streams.ofString(code));\n    if (forResponse) {\n        if (response.isAccepted())\n            return { accepted: true, value: response.value };\n        return { accepted: false, issuePosition: { start: response.location(), end: code.length }, message: 'Failed to parse' };\n    }\n    if (response.isAccepted())\n        return response.value;\n    throw new ParseError('Failed to parse:\\n\\t' + code + '\\n\\t' + ' '.repeat(response.location()) + '^');\n}\nexports.parse = parse;\nvar typeUtils = { number: number, char: char, boolean: boolean, f: f, list: list, tuple: tuple, maybe: maybe, either: either, a: a, b: b, c: c, d: d, pt: pt, standardCtx: standardCtx };\nexports.typeUtils = typeUtils;\n","import React, { ReactNode } from 'react';\nimport { Expr, Var, App, Abs, Let, NumberLiteral, CharLiteral } from 'language'\n\nfunction ASTView({ ast }: { ast: Expr }) {\n    return <div className=\"ast-view\"><NodeView node={ast} /></div>\n}\n\nfunction NodeView({ node }: { node: Expr }) {\n    if (node instanceof CharLiteral || node instanceof NumberLiteral) {\n        return <NodeWrapperView>{node.value}</NodeWrapperView>;\n    }\n\n    if (node instanceof Var) {\n        return <NodeWrapperView>{node.name}</NodeWrapperView>;\n    }\n\n    if (node instanceof App) {\n        return <>\n            <NodeWrapperView><span className=\"sans-serif\">Function application</span></NodeWrapperView>\n            <NodeChildView><NodeView node={node.func}/></NodeChildView>\n            <NodeChildView><NodeView node={node.arg}/></NodeChildView>\n        </>;\n    }\n\n    if (node instanceof Abs) {\n        return <>\n            <NodeWrapperView>λ{node.param}</NodeWrapperView>\n            <NodeChildView symbol='->'><NodeView node={node.body}/></NodeChildView>\n        </>\n    }\n\n    if (node instanceof Let) {\n        return <>\n            <NodeWrapperView>let {node.param}</NodeWrapperView>\n            <NodeChildView symbol='='><NodeView node={node.def}/></NodeChildView>\n            <NodeChildView symbol='in'><NodeView node={node.body}/></NodeChildView>\n        </>\n    }\n\n    throw new Error('Attempted to display a node of invalid type ' + typeof node);\n}\n\nfunction NodeWrapperView({ children }: { children: ReactNode }) {\n    return <div className=\"ast-node\">{children}</div>;\n}\n\nfunction NodeChildView({ children, symbol }: { children: ReactNode, symbol?: string }) {\n    return <div className=\"ast-child\" data-symbol={symbol}>{children}</div>\n}\n\nexport default ASTView;","import React, { useMemo, useEffect } from 'react';\nimport { parse } from 'language'\nimport { infer } from 'algorithm-w'\nimport ASTView from './ASTView';\n\nexport interface Highlight {\n  start: number;\n  end: number;\n  className: string;\n}\n\nfunction ResultView({ code, setHighlights }: { code: string, setHighlights: (h: Highlight[]) => void }) {\n  // Parse the code, highlighting any errors\n  const parseResult = useMemo(() => {\n    return parse(code, true);\n  }, [code]);\n  useEffect(() => setHighlights(parseResult.accepted ? [] : [{ start: parseResult.issuePosition.start, end: parseResult.issuePosition.end || 0, className: 'error' }]), [parseResult, setHighlights]);\n\n  // Infer the types, highlighting any errors\n  const inferenceResult = useMemo(() => {\n    if (!parseResult.accepted) return;\n    return infer(parseResult.value, true);\n  }, [parseResult])!;\n  useEffect(() => inferenceResult && setHighlights(inferenceResult.accepted ? [] : [{ start: inferenceResult.issuePosition.start, end: inferenceResult.issuePosition.end || 0, className: 'error' }]), [inferenceResult, setHighlights]);\n\n  if (!parseResult.accepted) {\n    return <>\n      <h2>AST</h2>\n      <p>{parseResult.message}</p>\n    </>;\n  }\n\n  if (!inferenceResult.accepted) {\n    return <>\n      <h2>AST</h2>\n      <ASTView ast={parseResult.value} />\n\n      <h2>Type</h2>\n      <p>{inferenceResult.message}</p>\n    </>;\n  }\n\n  return <>\n    <h2>AST</h2>\n    <ASTView ast={parseResult.value} />\n\n    <h2>Type</h2>\n    <p>{inferenceResult.value.toString()}</p>\n  </>;\n}\n\nexport default ResultView;","import React, { useState } from 'react';\nimport './Main.css';\nimport ResultView, { Highlight } from './ResultView';\n\nfunction Main() {\n  const [code, setCode] = useState('map not []');\n  const [highlights, setHighlights] = useState<Highlight[]>([]);\n\n  return (\n    <>\n      <h1>interactive type inference</h1>\n      <h2>\n        Play with algorithm W in your browser.\n      </h2>\n      <h2>Samples:\n        <button onClick={() => setCode('4')}>4</button>\n        <button onClick={() => setCode('not')}>not</button>\n        <button onClick={() => setCode('not True')}>not True</button>\n        <button onClick={() => setCode('+')}>+</button>\n        <button onClick={() => setCode('map not []')}>map not []</button>\n        <button onClick={() => setCode('fst')}>fst</button>\n        <button onClick={() => setCode('Just')}>Just</button>\n        <button onClick={() => setCode('let x = 3 in + x')}>let x = 3 in + x</button>\n        <button onClick={() => setCode('\\\\x -> / x 2')}>\\x -{'>'} / x 2</button>\n        <button onClick={() => setCode('cons 23 []')}>cons 23 []</button>\n      </h2>\n      <div className='code-container'>\n        <input placeholder=\"Enter code...\" value={code} onChange={e => setCode(e.target.value)} />\n        {code && highlights.map((h, i) => <p key={i}>{code.slice(0, h.start)}<span className={h.className}>{code.slice(h.start, h.end)}</span>{code.slice(h.end)}</p>)}\n      </div>\n      {code && <ResultView code={code} setHighlights={setHighlights} />}\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}