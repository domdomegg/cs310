{"version":3,"sources":["../../language/dist/index.js","../../algorithm-w/dist/index.js","Main.tsx","index.tsx"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","defineProperty","exports","value","ParseError","parse","PolyType","TypeFuncApp","TypeVar","Let","Abs","App","Var","NumberLiteral","CharLiteral","parser_1","require","toString","name","fun","arg","func","param","body","def","constructorName","args","_i","arguments","length","map","a","join","quantifiedVars","monoType","v","_super","message","_this","Error","genlex","GenLex","identifier","tokenize","C","charIn","rep","t","charLiteral","stringLiteral","numberLiteral","N","number","backslash","char","arrow","string","lparen","rparen","letTok","equal","inTok","expression2","F","try","optApp","LEAF","or","ABS","LET","PAR","expression3","toCharArray","chars","split","expr","pop","drop","then","ABS_","single","lazy","tuple","at","LET_","parser","expressionPrime","array","nestLeft","optrep","reduce","prev","cur","use","eos","code","forResponse","response","Streams","ofString","isAccepted","repeat","location","__assign","assign","s","i","n","apply","__spreadArrays","il","r","k","j","jl","infer","unify","combine","substitute","TypeInferenceError","language_1","substitution","context","mappedContext","key","substitutions","slice","newSubstitution","type1","type2","_a","contains","JSON","stringify","sub","diff","bset","Set","filter","has","freeVars","type","acc","values","_infer","ctx","freshTypeName","_b","inst","_c","funcType","funcSubstitution","_d","argType","argSubstitution","unifiedSubstitution","_e","bodyType","bodySubstitution","_f","defType","defSubstitution","_g","generalise","from","to","indexOf","bind","other","some","includes","typeCounter","boolean","f","one","two","extra","list","monoTypes","maybe","either","left","right","c","pt","mt","standardCtx","Main","useState","setCode","ast","e","onClick","placeholder","onChange","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8ba1895.chunk.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseError = exports.parse = exports.PolyType = exports.TypeFuncApp = exports.TypeVar = exports.Let = exports.Abs = exports.App = exports.Var = exports.NumberLiteral = exports.CharLiteral = void 0;\nvar parser_1 = require(\"@masala/parser\");\nvar CharLiteral = /** @class */ (function () {\n    function CharLiteral(value) {\n        this.value = value;\n    }\n    CharLiteral.prototype.toString = function () {\n        return this.value;\n    };\n    return CharLiteral;\n}());\nexports.CharLiteral = CharLiteral;\nvar NumberLiteral = /** @class */ (function () {\n    function NumberLiteral(value) {\n        this.value = value;\n    }\n    NumberLiteral.prototype.toString = function () {\n        return this.value.toString();\n    };\n    return NumberLiteral;\n}());\nexports.NumberLiteral = NumberLiteral;\nvar Var = /** @class */ (function () {\n    function Var(name) {\n        this.name = name;\n    }\n    Var.prototype.toString = function () {\n        return this.name;\n    };\n    return Var;\n}());\nexports.Var = Var;\nvar App = /** @class */ (function () {\n    function App(fun, arg) {\n        this.func = fun;\n        this.arg = arg;\n    }\n    App.prototype.toString = function () {\n        return '(' + this.func.toString() + ' ' + this.arg.toString() + ')';\n    };\n    return App;\n}());\nexports.App = App;\nvar Abs = /** @class */ (function () {\n    function Abs(param, body) {\n        this.param = param;\n        this.body = body;\n    }\n    Abs.prototype.toString = function () {\n        return '(\\\\' + this.param + ' -> ' + this.body.toString() + ')';\n    };\n    return Abs;\n}());\nexports.Abs = Abs;\nvar Let = /** @class */ (function () {\n    function Let(param, def, body) {\n        this.param = param;\n        this.def = def;\n        this.body = body;\n    }\n    Let.prototype.toString = function () {\n        return '(let ' + this.param + ' = ' + this.def.toString() + ' in ' + this.body.toString() + ')';\n    };\n    return Let;\n}());\nexports.Let = Let;\nvar TypeVar = /** @class */ (function () {\n    function TypeVar(name) {\n        this.name = name;\n    }\n    TypeVar.prototype.toString = function () {\n        return this.name;\n    };\n    return TypeVar;\n}());\nexports.TypeVar = TypeVar;\nvar TypeFuncApp = /** @class */ (function () {\n    function TypeFuncApp(constructorName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        this.constructorName = constructorName;\n        this.args = args;\n    }\n    TypeFuncApp.prototype.toString = function () {\n        return this.constructorName + (this.args.length ? ' ' : '') + this.args.map(function (a) { return '(' + a.toString() + ')'; }).join(' ');\n    };\n    return TypeFuncApp;\n}());\nexports.TypeFuncApp = TypeFuncApp;\nvar PolyType = /** @class */ (function () {\n    function PolyType(quantifiedVars, monoType) {\n        this.quantifiedVars = quantifiedVars;\n        this.monoType = monoType;\n    }\n    PolyType.prototype.toString = function () {\n        return this.quantifiedVars.map(function (v) { return '∀' + v; }).join('') + ': ' + this.monoType.toString();\n    };\n    return PolyType;\n}());\nexports.PolyType = PolyType;\n/* Parser */\n// expr ::= identifier # var\n//        | ( \\ identifier -> expr ) # abs\n//        | ( expr )\n//        | expr expr # app\n//        | ( let identifier = expr in expr ) # let\n// expr ::= identifier expr' # var\n//        | ( \\ identifier -> expr ) expr' # abs\n//        | ( expr ) expr'\n//        | ( let identifier = expr in expr ) expr' # let\n// expr' ::= expr A' | eps # app\nvar ParseError = /** @class */ (function (_super) {\n    __extends(ParseError, _super);\n    function ParseError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"ParseError\";\n        return _this;\n    }\n    return ParseError;\n}(Error));\nexports.ParseError = ParseError;\nvar genlex = new parser_1.GenLex();\nvar identifier = genlex.tokenize(parser_1.C.charIn('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789*+-/%<>^:[]_|&,').rep().map(function (t) { return t.join(); }), 'identifier');\nvar charLiteral = genlex.tokenize(parser_1.C.charLiteral(), 'char');\nvar stringLiteral = genlex.tokenize(parser_1.C.stringLiteral(), 'string');\nvar numberLiteral = genlex.tokenize(parser_1.N.number(), 'number');\nvar backslash = genlex.tokenize(parser_1.C.char('\\\\'), 'backslash');\nvar arrow = genlex.tokenize(parser_1.C.string('->'), 'arrow');\nvar lparen = genlex.tokenize(parser_1.C.char('('), 'lparen');\nvar rparen = genlex.tokenize(parser_1.C.char(')'), 'rparen');\nvar letTok = genlex.tokenize(parser_1.C.string('let'), 'let');\nvar equal = genlex.tokenize(parser_1.C.char('='), 'equal');\nvar inTok = genlex.tokenize(parser_1.C.string('in'), 'in');\nvar expression1 = function () {\n    return parser_1.F.try(LET_())\n        .or(parser_1.F.try(ABS_()))\n        .or(parser_1.F.try(expression2()));\n};\nvar expression2 = function () {\n    return parser_1.F.try(optApp(LEAF()))\n        .or(parser_1.F.try(optApp(ABS())))\n        .or(parser_1.F.try(optApp(LET())))\n        .or(parser_1.F.try(optApp(PAR())));\n};\nvar expression3 = function () {\n    return parser_1.F.try(LEAF())\n        .or(parser_1.F.try(ABS()))\n        .or(parser_1.F.try(LET()))\n        .or(parser_1.F.try(PAR()));\n};\nvar toCharArray = function (string) {\n    var chars = string.split('');\n    var expr = new Var('[]');\n    while (chars.length) {\n        expr = new App(new App(new Var(':'), new CharLiteral(chars.pop())), expr);\n    }\n    return expr;\n};\n// We have to SHOUT as var and let are restricted keywords in JavaScript\nvar LEAF = function () { return parser_1.F.try(numberLiteral.map(function (value) { return new NumberLiteral(value); })).or(parser_1.F.try(stringLiteral.map(toCharArray))).or(parser_1.F.try(charLiteral.map(function (value) { return new CharLiteral(value); }))).or(parser_1.F.try(identifier.map(function (value) { return new Var(value); }))); };\nvar ABS = function () { return lparen.drop().then(ABS_()).then(rparen.drop()).single(); };\nvar ABS_ = function () { return backslash.drop().then(identifier).then(arrow.drop()).then(parser_1.F.lazy(expression2)).map(function (tuple) { return new Abs(tuple.at(0), tuple.at(1)); }); };\nvar PAR = function () { return lparen.drop().then(parser_1.F.lazy(expression2)).then(rparen.drop()).single(); };\nvar LET = function () { return lparen.drop().then(LET_()).then(rparen.drop()).single(); };\nvar LET_ = function () { return letTok.drop().then(identifier).then(equal.drop()).then(parser_1.F.lazy(expression2)).then(inTok.drop()).then(parser_1.F.lazy(expression2)).map(function (tuple) { return new Let(tuple.at(0), tuple.at(1), tuple.at(2)); }); };\nvar optApp = function (parser) { return parser.then(expressionPrime()).array().map(nestLeft); };\nvar expressionPrime = function () { return parser_1.F.lazy(expression3).optrep(); };\nvar nestLeft = function (v) { return v.reduce(function (prev, cur) { return new App(prev, cur); }); };\nvar parser = genlex.use(expression1().then(parser_1.F.eos().drop()).single());\nfunction parse(code, forResponse) {\n    if (forResponse === void 0) { forResponse = false; }\n    var response = parser.parse(parser_1.Streams.ofString(code));\n    if (forResponse)\n        return response;\n    if (response.isAccepted())\n        return response.value;\n    throw new ParseError('Failed to parse:\\n\\t' + code + '\\n\\t' + ' '.repeat(response.location()) + '^');\n}\nexports.parse = parse;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.apply = exports.infer = exports.unify = exports.combine = exports.substitute = exports.TypeInferenceError = void 0;\nvar language_1 = require(\"language\");\nvar TypeInferenceError = /** @class */ (function (_super) {\n    __extends(TypeInferenceError, _super);\n    function TypeInferenceError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"TypeInferenceError\";\n        return _this;\n    }\n    return TypeInferenceError;\n}(Error));\nexports.TypeInferenceError = TypeInferenceError;\nfunction substitute(substitution, arg) {\n    var context = arg;\n    var mappedContext = {};\n    for (var key in context) {\n        mappedContext[key] = apply(context[key], substitution);\n    }\n    return mappedContext;\n}\nexports.substitute = substitute;\n/** Combines substitutions. Applies leftmost substitution first, e.g. combine(a, b).apply(e) == e.apply(a).apply(b) */\nfunction combine() {\n    var substitutions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        substitutions[_i] = arguments[_i];\n    }\n    if (substitutions.length === 0)\n        return {};\n    if (substitutions.length === 1)\n        return substitutions[0];\n    if (substitutions.length > 2)\n        return combine(substitutions[0], combine.apply(void 0, substitutions.slice(1)));\n    var a = substitutions[0];\n    var b = substitutions[1];\n    var newSubstitution = {};\n    for (var key in a) {\n        newSubstitution[key] = apply(a[key], b);\n    }\n    for (var key in b) {\n        if (!(key in a)) {\n            newSubstitution[key] = b[key];\n        }\n    }\n    return newSubstitution;\n}\nexports.combine = combine;\nfunction unify(type1, type2) {\n    var _a;\n    if (type1 instanceof language_1.TypeVar) {\n        if (contains(type2, type1)) {\n            throw new TypeInferenceError('Contains/occurs check failed with ' + JSON.stringify(type1) + ' and ' + JSON.stringify(type2));\n        }\n        return _a = {}, _a[type1.name] = type2, _a;\n    }\n    if (type2 instanceof language_1.TypeVar) {\n        return unify(type2, type1);\n    }\n    if (type1 instanceof language_1.TypeFuncApp && type2 instanceof language_1.TypeFuncApp) {\n        if (type1.constructorName !== type2.constructorName) {\n            throw new TypeInferenceError('Could not unify type function applications with different constructors \\'' + type1.constructorName + '\\' and \\'' + type2.constructorName + '\\'');\n        }\n        if (type1.args.length !== type2.args.length) {\n            throw new TypeInferenceError('Could not unify type function applications with different argument list lengths ' + JSON.stringify(type1) + ' and ' + JSON.stringify(type2));\n        }\n        var sub = {};\n        for (var i = 0; i < type1.args.length; i++) {\n            sub = combine(unify(apply(type1.args[i], sub), apply(type2.args[i], sub)), sub);\n        }\n        return sub;\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nexports.unify = unify;\n/** a \\ b */\nfunction diff(a, b) {\n    var bset = new Set(b);\n    return a.filter(function (v) { return !bset.has(v); });\n}\nfunction freeVars(type) {\n    if (type instanceof language_1.PolyType) {\n        return diff(freeVars(type.monoType), type.quantifiedVars);\n    }\n    if (type instanceof language_1.TypeVar) {\n        return [type.name];\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return type.args.map(freeVars).reduce(function (acc, cur) { return __spreadArrays(acc, cur); }, []);\n    }\n    if (type) {\n        // type: Context\n        return Object.values(type).map(freeVars).reduce(function (acc, cur) { return __spreadArrays(acc, cur); }, []);\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction generalise(ctx, type) {\n    return new language_1.PolyType(diff(freeVars(type), freeVars(ctx)), type);\n}\n// TODO: fallback to a default context instead of an empty one\nfunction infer(expr, ctx) {\n    if (ctx === void 0) { ctx = {}; }\n    var typeCounter = 0;\n    var freshTypeName = function () { return \"t\" + typeCounter++; };\n    return _infer(expr, ctx, freshTypeName)[0];\n}\nexports.infer = infer;\nfunction _infer(expr, ctx, freshTypeName) {\n    var _a, _b;\n    if (expr instanceof language_1.CharLiteral) {\n        return [inst(new language_1.PolyType([], new language_1.TypeFuncApp('char')), freshTypeName), {}];\n    }\n    if (expr instanceof language_1.NumberLiteral) {\n        return [inst(new language_1.PolyType([], new language_1.TypeFuncApp('number')), freshTypeName), {}];\n    }\n    if (expr instanceof language_1.Var) {\n        var type = ctx[expr.name];\n        if (!type) {\n            throw new TypeInferenceError(expr.name + ' is not in scope');\n        }\n        return [inst(type, freshTypeName), {}];\n    }\n    if (expr instanceof language_1.App) {\n        var _c = _infer(expr.func, ctx, freshTypeName), funcType = _c[0], funcSubstitution = _c[1];\n        var _d = _infer(expr.arg, substitute(funcSubstitution, ctx), freshTypeName), argType = _d[0], argSubstitution = _d[1];\n        var t = new language_1.TypeVar(freshTypeName());\n        var unifiedSubstitution = unify(apply(funcType, argSubstitution), new language_1.TypeFuncApp(\"->\", argType, t));\n        return [apply(t, unifiedSubstitution), combine(funcSubstitution, argSubstitution, unifiedSubstitution)];\n    }\n    if (expr instanceof language_1.Abs) {\n        var t = new language_1.TypeVar(freshTypeName());\n        var _e = _infer(expr.body, __assign(__assign({}, ctx), (_a = {}, _a[expr.param] = new language_1.PolyType([], t), _a)), freshTypeName), bodyType = _e[0], bodySubstitution = _e[1];\n        return [apply(new language_1.TypeFuncApp(\"->\", t, bodyType), bodySubstitution), bodySubstitution];\n    }\n    if (expr instanceof language_1.Let) {\n        var _f = _infer(expr.def, ctx, freshTypeName), defType = _f[0], defSubstitution = _f[1];\n        var _g = _infer(expr.body, __assign(__assign({}, substitute(defSubstitution, ctx)), (_b = {}, _b[expr.param] = generalise(substitute(defSubstitution, ctx), defType), _b)), freshTypeName), bodyType = _g[0], bodySubstitution = _g[1];\n        return [bodyType, combine(defSubstitution, bodySubstitution)];\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction inst(type, freshTypeName, from, to) {\n    if (from === void 0) { from = []; }\n    if (to === void 0) { to = []; }\n    if (type instanceof language_1.TypeVar) {\n        var i = from.indexOf(type.name);\n        return (i === -1) ? type : new language_1.TypeVar(to[i]);\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return new (language_1.TypeFuncApp.bind.apply(language_1.TypeFuncApp, __spreadArrays([void 0, type.constructorName], type.args.map(function (arg) { return inst(arg, freshTypeName, from, to); }))))();\n    }\n    if (type instanceof language_1.PolyType) {\n        return inst(type.monoType, freshTypeName, type.quantifiedVars, type.quantifiedVars.map(freshTypeName));\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction apply(type, substitution) {\n    if (type instanceof language_1.TypeVar) {\n        return type.name in substitution ? substitution[type.name] : type;\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return new (language_1.TypeFuncApp.bind.apply(language_1.TypeFuncApp, __spreadArrays([void 0, type.constructorName], type.args.map(function (arg) { return apply(arg, substitution); }))))();\n    }\n    if (type instanceof language_1.PolyType) {\n        return new language_1.PolyType(type.quantifiedVars, apply(type.monoType, substitution));\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nexports.apply = apply;\nfunction contains(type, other) {\n    if (type instanceof language_1.TypeVar) {\n        return type.name == other.name;\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return type.args.some(function (arg) { return contains(arg, other); });\n    }\n    if (type instanceof language_1.PolyType) {\n        return contains(type.monoType, other) && !type.quantifiedVars.includes(other.name);\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\n","import React, { useState } from 'react';\nimport './Main.css';\nimport { TypeVar, TypeFunc, TypeFuncApp, MonoType, PolyType, Expr, Var, App, Abs, Let, parse, ParseError, NumberLiteral, CharLiteral } from 'language'\nimport { Context, infer, TypeInferenceError } from 'algorithm-w'\n\n// Helper to make writing out the AST less painful\n// e('+', 'myNum', 'myNum')\n// will result in\n// new App(new App(v('+'), v('myNum')), new Var('myNum'))\nexport const e = (v: string | Expr, ...args: (string | Expr)[]): Expr => {\n  if (typeof v === 'string') {\n      if (args.length === 0) return new Var(v);\n  } else {\n      if (args.length === 0) return v;\n  }\n  return new App(e(v, ...args.slice(0, args.length - 1)), e(args[args.length - 1]));\n}\n\n// Utilities which make creating types easier\nexport const number = new TypeFuncApp('number');\nexport const boolean = new TypeFuncApp('boolean');\nexport const f = (one: MonoType, two: MonoType, ...extra: MonoType[]): TypeFuncApp => {\n    if (extra.length === 0) return new TypeFuncApp('->', one, two)\n    return new TypeFuncApp('->', one, f(two, extra[0], ...extra.slice(1)))\n}\nexport const list = (monoType: MonoType): TypeFuncApp => new TypeFuncApp('[]', monoType);\nexport const tuple = (...monoTypes: MonoType[]): TypeFuncApp => {\n    if (monoTypes.length <= 1) throw new Error('Tuple has too few elements, minimum of 2 but given ' + monoTypes.length)\n    if (monoTypes.length > 8) throw new Error('Tuple has too many elements, maximum of 8 but given ' + monoTypes.length)\n    return new TypeFuncApp(','.repeat(monoTypes.length - 1) as TypeFunc, ...monoTypes);\n}\nexport const maybe = (monoType: MonoType): TypeFuncApp => new TypeFuncApp('Maybe', monoType);\nexport const either = (left: MonoType, right: MonoType): TypeFuncApp => new TypeFuncApp('Either', left, right);\n\nexport const a = new TypeVar('a');\nexport const b = new TypeVar('b');\nexport const c = new TypeVar('c');\nexport const d = new TypeVar('d');\nconst pt = (mt: MonoType) => new PolyType([], mt);\n\n// Set up some basic things so the langauge is interesting\nexport const standardCtx: Context = {\n  // Arithmetic\n  '+': pt(f(number, number, number)),\n  '*': pt(f(number, number, number)),\n  '-': pt(f(number, number, number)),\n  '/': pt(f(number, number, number)),\n  '%': pt(f(number, number, number)),\n  'negate': pt(f(number, number)),\n  'abs': pt(f(number, number)),\n  'signum': pt(f(number, number)),\n  'even': pt(f(number, boolean)),\n  'odd': pt(f(number, boolean)),\n\n  // Booleans\n  'not': pt(f(boolean, boolean)),\n  '&&': pt(f(boolean, boolean, boolean)),\n  '||': pt(f(boolean, boolean, boolean)),\n  'True': pt(boolean),\n  'False': pt(boolean),\n\n  // Example variables\n  'myNumber': pt(number),\n  'myBoolean': pt(boolean),\n\n  // Lists\n  '[]': new PolyType(['a'], list(a)),\n  ':': new PolyType(['a'], f(a, list(a), list(a))),\n  'cons': new PolyType(['a'], f(a, list(a), list(a))),\n  '++': new PolyType(['a'], f(list(a), list(a), list(a))),\n  'head': new PolyType(['a'], f(list(a), a)),\n  'last': new PolyType(['a'], f(list(a), a)),\n  'tail': new PolyType(['a'], f(list(a), list(a))),\n  'init': new PolyType(['a'], f(list(a), list(a))),\n  'uncons': new PolyType(['a'], f(list(a), maybe(tuple(a, list(a))))),\n  'null': new PolyType(['a'], f(list(a), boolean)),\n  'length': new PolyType(['a'], f(list(a), number)),\n  'map': new PolyType(['a', 'b'], f(f(a, b), list(a), list(b))),\n  'reverse': new PolyType(['a'], f(list(a), list(a))),\n  'intersperse': new PolyType(['a'], f(a, list(a), list(a))),\n  'intercalate': new PolyType(['a'], f(list(a), list(list(a)), list(a))),\n  'transpose': new PolyType(['a'], f(list(list(a)), list(list((a))))),\n  'subsequences': new PolyType(['a'], f(list(a), list(list((a))))),\n  'permutations': new PolyType(['a'], f(list(a), list(list((a))))),\n  'foldl': new PolyType(['a'], f(f(b, a, b), b, list(a), b)),\n  'foldl\\'': new PolyType(['a'], f(f(b, a, b), b, list(a), b)),\n  'foldl1': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n  'foldl1\\'': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n  'foldr': new PolyType(['a'], f(f(a, b, b), b, list(a), b)),\n  'foldr1': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n  'concat': new PolyType(['a'], f(list(list(a)), list(a))),\n  'concatMap': new PolyType(['a'], f(f(a, list(a)), list(a), list(b))),\n  'and': pt(f(list(boolean), boolean)),\n  'or': pt(f(list(boolean), boolean)),\n  'any': new PolyType(['a'], f(f(a, boolean), list(a), boolean)),\n  'all': new PolyType(['a'], f(f(a, boolean), list(a), boolean)),\n  'sum': pt(f(list(number), number)),\n  'product': pt(f(list(number), number)),\n  'maximum': pt(f(list(number), number)),\n  'minimum': pt(f(list(number), number)),\n  'take': new PolyType(['a'], f(number, list(a), list(a))),\n  'drop': new PolyType(['a'], f(number, list(a), list(a))),\n  'splitAt': new PolyType(['a'], f(number, list(a), tuple(list(a), list(a)))),\n  'takeWhile': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n  'dropWhile': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n  'elem': new PolyType(['a'], f(a, list(a), boolean)),\n  'notElem': new PolyType(['a'], f(a, list(a), boolean)),\n  'lookup': new PolyType(['a', 'b'], f(a, list(tuple(a, b)), maybe(b))),\n  'find': new PolyType(['a'], f(f(a, boolean), list(a), maybe(a))),\n  'filter': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n  'partition': new PolyType(['a'], f(f(a, boolean), list(a), tuple(list(a), list(a)))),\n  '!!': new PolyType(['a'], f(list(a), number, a)),\n  'zip': new PolyType(['a', 'b'], f(list(a), list(b), list(tuple(a, b)))),\n  'zipWith': new PolyType(['a', 'b', 'c'], f(f(a, b, c), list(a), list(b), list(c))),\n  'unzip': new PolyType(['a', 'b'], f(list(tuple(a, b)), tuple(list(a), list(b)))),\n  'nub': new PolyType(['a'], f(list(a), list(a))),\n  'delete': new PolyType(['a'], f(a, list(a), list(a))),\n  '\\\\\\\\': new PolyType(['a'], f(list(a), list(a), list(a))),\n  'union': new PolyType(['a'], f(list(a), list(a), list(a))),\n  'intersect': new PolyType(['a'], f(list(a), list(a), list(a))),\n  'sort': new PolyType(['a'], f(list(a), list(a))),\n\n  // Tuples\n  ',': new PolyType(['a', 'b'], f(a, b, tuple(a, b))),\n  ',,': new PolyType(['a', 'b', 'c'], f(a, b, c, tuple(a, b, c))),\n  ',,,': new PolyType(['a', 'b', 'c', 'd'], f(a, b, c, d, tuple(a, b, c, d))),\n  'fst': new PolyType(['a', 'b'], f(tuple(a, b), a)),\n  'snd': new PolyType(['a', 'b'], f(tuple(a, b), b)),\n  'curry': new PolyType(['a', 'b', 'c'], f(f(tuple(a, b), c), a, b, c)),\n  'uncurry': new PolyType(['a', 'b', 'c'], f(f(a, b, c), tuple(a, b), c)),\n\n  // Maybe\n  'Just': new PolyType(['a'], f(a, maybe(a))),\n  'Nothing': new PolyType(['a'], maybe(a)),\n  \n  // Either\n  'Left': new PolyType(['a', 'b'], f(a, either(a, b))),\n  'Right': new PolyType(['a', 'b'], f(b, either(a, b))),\n}\n\nfunction Main() {\n  const [code, setCode] = useState('map not []');\n  // Either the result or error message\n  let ast: Expr | string = 'Failed to parse';\n  let type: MonoType | string = 'Failed to infer type';\n  try {\n    ast = parse(code);\n    if (!(ast instanceof CharLiteral) && !(ast instanceof NumberLiteral) && !(ast instanceof Var) && !(ast instanceof App) && !(ast instanceof Abs) && !(ast instanceof Let)) {\n      throw new Error('Not a valid expression');\n    }\n    type = infer(ast, standardCtx);\n  } catch (e) {\n    if (e.name === ParseError.name) {\n      ast = (e as ParseError).message;\n    } else if (e.name === TypeInferenceError.name) {\n      type = (e as TypeInferenceError).message;\n    } else {\n      ast = 'Not a valid expression: ' + JSON.stringify(e.message);\n    }\n  }\n\n  return (\n    <>\n      <h1>interactive type inference</h1>\n      <h2>\n        Play with algorithm W in your browser.\n      </h2>\n      <h2>Samples:\n        <button onClick={() => setCode('4')}>4</button>\n        <button onClick={() => setCode('+')}>+</button>\n        <button onClick={() => setCode('map not []')}>map not []</button>\n        <button onClick={() => setCode('fst')}>fst</button>\n        <button onClick={() => setCode('Just')}>Just</button>\n        <button onClick={() => setCode('let x = 3 in + x')}>let x = 3 in +</button>\n      </h2>\n      <textarea placeholder=\"Enter code here...\" value={code} onChange={e => setCode(e.target.value)}></textarea>\n\n      <h2>AST</h2>\n      <p>{ast.toString()}</p>\n\n      <h2>Type</h2>\n      <p>{type.toString()}</p>\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}