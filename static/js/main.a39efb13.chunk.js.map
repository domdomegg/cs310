{"version":3,"sources":["../../language/dist/index.js","../../algorithm-w/dist/index.js","ASTView.tsx","ResultView.tsx","Main.tsx","index.tsx"],"names":["__extends","this","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__spreadArrays","s","i","il","arguments","length","r","k","a","j","jl","defineProperty","exports","value","typeUtils","ParseError","parse","PolyType","TypeFuncApp","TypeVar","Let","Abs","App","Var","NumberLiteral","CharLiteral","masala_parser_1","require","pos","notes","toString","name","fun","arg","func","param","body","def","constructorName","args","_i","startsWith","join","every","map","quantifiedVars","monoType","v","number","char","boolean","f","one","two","extra","apply","slice","list","tuple","monoTypes","Error","bind","repeat","maybe","either","left","right","c","pt","mt","standardCtx","_super","message","_this","genlex","GenLex","identifier","tokenize","C","charIn","rep","t","letTok","string","inTok","charLiteral","stringLiteral","numberLiteral","N","lbracket","rbracket","backslash","arrow","lparen","rparen","equal","comma","expression1","F","try","LET_","or","ABS_","expression2","optApp","LEAF","ABS","LET","PAR","expression3","toCharList","chars","split","getPos","expr","start","end","charPos","toList","first","last","elements","at","array","orElse","toTuple","result","nestLeft","offset","getOffset","input","location","guessedEnd","rawString","source","trimEnd","expandPos","indexOf","lastIndexOf","then","lazy","drop","optrep","opt","single","parser","expressionPrime","reduce","prev","cur","use","eos","code","forResponse","specialCase","endsWith","accepted","issuePosition","specialCases","response","Streams","ofString","isAccepted","__assign","assign","n","infer","unify","combine","substitute","TypeInferenceError","language_1","substitution","context","mappedContext","key","substitutions","newSubstitution","type1","type2","_a","contains","JSON","stringify","sub","diff","bset","Set","filter","has","freeVars","type","acc","values","generalise","ctx","xs","vs","forEach","x","push","unique","typeCounter","freshTypeName","_infer","steps","ast","cloneAst","e","get","highlight","Map","set","logger","_b","except","inst","err","instantiatedType","_c","funcType","funcSubstitution","_d","argType","argSubstitution","firstPartOfLogMessage","unifiedSubstitution","exprType","keys","replace","_e","bodyType","bodySubstitution","_f","defType","defSubstitution","generalisedDefType","_g","from","to","other","some","includes","NodeView","node","hoverCallback","NodeWrapperView","className","NodeChildView","symbol","children","onMouseOver","onMouseOut","data-symbol","ASTView","createHoverCallback","setHighlights","otherHighlights","active","ResultView","parseResult","useMemo","useEffect","inferenceResult","step","Main","useState","setCode","highlights","onClick","placeholder","onChange","target","h","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a39efb13.chunk.js","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.typeUtils = exports.ParseError = exports.parse = exports.PolyType = exports.TypeFuncApp = exports.TypeVar = exports.Let = exports.Abs = exports.App = exports.Var = exports.NumberLiteral = exports.CharLiteral = void 0;\nvar masala_parser_1 = require(\"@domdomegg/masala-parser\");\nvar CharLiteral = /** @class */ (function () {\n    function CharLiteral(value, pos, notes) {\n        this.value = value;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    CharLiteral.prototype.toString = function () {\n        return \"'\" + this.value + \"'\";\n    };\n    return CharLiteral;\n}());\nexports.CharLiteral = CharLiteral;\nvar NumberLiteral = /** @class */ (function () {\n    function NumberLiteral(value, pos, notes) {\n        this.value = value;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    NumberLiteral.prototype.toString = function () {\n        return this.value.toString();\n    };\n    return NumberLiteral;\n}());\nexports.NumberLiteral = NumberLiteral;\nvar Var = /** @class */ (function () {\n    function Var(name, pos, notes) {\n        this.name = name;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    Var.prototype.toString = function () {\n        return this.name;\n    };\n    return Var;\n}());\nexports.Var = Var;\nvar App = /** @class */ (function () {\n    function App(fun, arg, pos, notes) {\n        this.func = fun;\n        this.arg = arg;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    App.prototype.toString = function () {\n        return '(' + this.func.toString() + ' ' + this.arg.toString() + ')';\n    };\n    return App;\n}());\nexports.App = App;\nvar Abs = /** @class */ (function () {\n    function Abs(param, body, pos, notes) {\n        this.param = param;\n        this.body = body;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    Abs.prototype.toString = function () {\n        return '(\\\\' + this.param + ' -> ' + this.body.toString() + ')';\n    };\n    return Abs;\n}());\nexports.Abs = Abs;\nvar Let = /** @class */ (function () {\n    function Let(param, def, body, pos, notes) {\n        this.param = param;\n        this.def = def;\n        this.body = body;\n        this.pos = pos;\n        this.notes = notes;\n    }\n    Let.prototype.toString = function () {\n        return '(let ' + this.param + ' = ' + this.def.toString() + ' in ' + this.body.toString() + ')';\n    };\n    return Let;\n}());\nexports.Let = Let;\nvar TypeVar = /** @class */ (function () {\n    function TypeVar(name) {\n        this.name = name;\n    }\n    TypeVar.prototype.toString = function () {\n        return this.name;\n    };\n    return TypeVar;\n}());\nexports.TypeVar = TypeVar;\nvar TypeFuncApp = /** @class */ (function () {\n    function TypeFuncApp(constructorName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        this.constructorName = constructorName;\n        this.args = args;\n    }\n    TypeFuncApp.prototype.toString = function () {\n        if (this.constructorName == '->') {\n            var firstArgIsFunction = this.args[0] instanceof TypeFuncApp && this.args[0].constructorName == '->';\n            return (firstArgIsFunction ? '(' + this.args[0].toString() + ')' : this.args[0].toString()) + ' -> ' + this.args[1].toString();\n        }\n        if (this.constructorName == '[]') {\n            return '[' + this.args[0].toString() + ']';\n        }\n        if (this.constructorName.startsWith(',')) {\n            return '(' + this.args.join(', ') + ')';\n        }\n        if (this.args.every(function (arg) { return arg instanceof TypeVar || arg.constructorName == 'number' || arg.constructorName == 'char' || arg.constructorName == 'boolean'; })) {\n            return this.constructorName + (this.args.length ? ' ' : '') + this.args.map(function (a) { return '' + a.toString() + ''; }).join(' ');\n        }\n        return this.constructorName + (this.args.length ? ' ' : '') + this.args.map(function (a) { return '(' + a.toString() + ')'; }).join(' ');\n    };\n    return TypeFuncApp;\n}());\nexports.TypeFuncApp = TypeFuncApp;\nvar PolyType = /** @class */ (function () {\n    function PolyType(quantifiedVars, monoType) {\n        this.quantifiedVars = quantifiedVars;\n        this.monoType = monoType;\n    }\n    PolyType.prototype.toString = function () {\n        return (this.quantifiedVars.length ? (this.quantifiedVars.map(function (v) { return '∀' + v; }).join('') + ': ') : '') + this.monoType.toString();\n    };\n    return PolyType;\n}());\nexports.PolyType = PolyType;\n/* Type utilities */\n// Utilities which make creating types easier\nvar number = new TypeFuncApp('number');\nvar char = new TypeFuncApp('char');\nvar boolean = new TypeFuncApp('boolean');\nvar f = function (one, two) {\n    var extra = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        extra[_i - 2] = arguments[_i];\n    }\n    if (extra.length === 0)\n        return new TypeFuncApp('->', one, two);\n    return new TypeFuncApp('->', one, f.apply(void 0, __spreadArrays([two, extra[0]], extra.slice(1))));\n};\nvar list = function (monoType) { return new TypeFuncApp('[]', monoType); };\nvar tuple = function () {\n    var monoTypes = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        monoTypes[_i] = arguments[_i];\n    }\n    if (monoTypes.length <= 1)\n        throw new Error('Tuple has too few elements, minimum of 2 but given ' + monoTypes.length);\n    if (monoTypes.length > 8)\n        throw new Error('Tuple has too many elements, maximum of 8 but given ' + monoTypes.length);\n    return new (TypeFuncApp.bind.apply(TypeFuncApp, __spreadArrays([void 0, ','.repeat(monoTypes.length - 1)], monoTypes)))();\n};\nvar maybe = function (monoType) { return new TypeFuncApp('Maybe', monoType); };\nvar either = function (left, right) { return new TypeFuncApp('Either', left, right); };\nvar a = new TypeVar('a');\nvar b = new TypeVar('b');\nvar c = new TypeVar('c');\nvar d = new TypeVar('d');\nvar pt = function (mt) { return new PolyType([], mt); };\n// Set up some basic things so the langauge is interesting\nvar standardCtx = {\n    // Arithmetic\n    '+': pt(f(number, number, number)),\n    '*': pt(f(number, number, number)),\n    '-': pt(f(number, number, number)),\n    '/': pt(f(number, number, number)),\n    '%': pt(f(number, number, number)),\n    'negate': pt(f(number, number)),\n    'abs': pt(f(number, number)),\n    'signum': pt(f(number, number)),\n    'even': pt(f(number, boolean)),\n    'odd': pt(f(number, boolean)),\n    // Booleans\n    'not': pt(f(boolean, boolean)),\n    '&&': pt(f(boolean, boolean, boolean)),\n    '||': pt(f(boolean, boolean, boolean)),\n    'True': pt(boolean),\n    'False': pt(boolean),\n    // Example variables\n    'myNumber': pt(number),\n    'myBoolean': pt(boolean),\n    // Lists\n    '[]': new PolyType(['a'], list(a)),\n    ':': new PolyType(['a'], f(a, list(a), list(a))),\n    'cons': new PolyType(['a'], f(a, list(a), list(a))),\n    '++': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'head': new PolyType(['a'], f(list(a), a)),\n    'last': new PolyType(['a'], f(list(a), a)),\n    'tail': new PolyType(['a'], f(list(a), list(a))),\n    'init': new PolyType(['a'], f(list(a), list(a))),\n    'uncons': new PolyType(['a'], f(list(a), maybe(tuple(a, list(a))))),\n    'null': new PolyType(['a'], f(list(a), boolean)),\n    'length': new PolyType(['a'], f(list(a), number)),\n    'map': new PolyType(['a', 'b'], f(f(a, b), list(a), list(b))),\n    'reverse': new PolyType(['a'], f(list(a), list(a))),\n    'intersperse': new PolyType(['a'], f(a, list(a), list(a))),\n    'intercalate': new PolyType(['a'], f(list(a), list(list(a)), list(a))),\n    'transpose': new PolyType(['a'], f(list(list(a)), list(list((a))))),\n    'subsequences': new PolyType(['a'], f(list(a), list(list((a))))),\n    'permutations': new PolyType(['a'], f(list(a), list(list((a))))),\n    'foldl': new PolyType(['a'], f(f(b, a, b), b, list(a), b)),\n    'foldl\\'': new PolyType(['a'], f(f(b, a, b), b, list(a), b)),\n    'foldl1': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'foldl1\\'': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'foldr': new PolyType(['a'], f(f(a, b, b), b, list(a), b)),\n    'foldr1': new PolyType(['a'], f(f(a, a, a), list(a), a)),\n    'concat': new PolyType(['a'], f(list(list(a)), list(a))),\n    'concatMap': new PolyType(['a'], f(f(a, list(a)), list(a), list(b))),\n    'and': pt(f(list(boolean), boolean)),\n    'or': pt(f(list(boolean), boolean)),\n    'any': new PolyType(['a'], f(f(a, boolean), list(a), boolean)),\n    'all': new PolyType(['a'], f(f(a, boolean), list(a), boolean)),\n    'sum': pt(f(list(number), number)),\n    'product': pt(f(list(number), number)),\n    'maximum': pt(f(list(number), number)),\n    'minimum': pt(f(list(number), number)),\n    'take': new PolyType(['a'], f(number, list(a), list(a))),\n    'drop': new PolyType(['a'], f(number, list(a), list(a))),\n    'splitAt': new PolyType(['a'], f(number, list(a), tuple(list(a), list(a)))),\n    'takeWhile': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'dropWhile': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'elem': new PolyType(['a'], f(a, list(a), boolean)),\n    'notElem': new PolyType(['a'], f(a, list(a), boolean)),\n    'lookup': new PolyType(['a', 'b'], f(a, list(tuple(a, b)), maybe(b))),\n    'find': new PolyType(['a'], f(f(a, boolean), list(a), maybe(a))),\n    'filter': new PolyType(['a'], f(f(a, boolean), list(a), list(a))),\n    'partition': new PolyType(['a'], f(f(a, boolean), list(a), tuple(list(a), list(a)))),\n    '!!': new PolyType(['a'], f(list(a), number, a)),\n    'zip': new PolyType(['a', 'b'], f(list(a), list(b), list(tuple(a, b)))),\n    'zipWith': new PolyType(['a', 'b', 'c'], f(f(a, b, c), list(a), list(b), list(c))),\n    'unzip': new PolyType(['a', 'b'], f(list(tuple(a, b)), tuple(list(a), list(b)))),\n    'nub': new PolyType(['a'], f(list(a), list(a))),\n    'delete': new PolyType(['a'], f(a, list(a), list(a))),\n    'union': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'intersect': new PolyType(['a'], f(list(a), list(a), list(a))),\n    'sort': new PolyType(['a'], f(list(a), list(a))),\n    // Tuples\n    ',': new PolyType(['a', 'b'], f(a, b, tuple(a, b))),\n    ',,': new PolyType(['a', 'b', 'c'], f(a, b, c, tuple(a, b, c))),\n    ',,,': new PolyType(['a', 'b', 'c', 'd'], f(a, b, c, d, tuple(a, b, c, d))),\n    't': new PolyType(['a', 'b'], f(a, b, tuple(a, b))),\n    'tt': new PolyType(['a', 'b', 'c'], f(a, b, c, tuple(a, b, c))),\n    'ttt': new PolyType(['a', 'b', 'c', 'd'], f(a, b, c, d, tuple(a, b, c, d))),\n    'fst': new PolyType(['a', 'b'], f(tuple(a, b), a)),\n    'snd': new PolyType(['a', 'b'], f(tuple(a, b), b)),\n    'curry': new PolyType(['a', 'b', 'c'], f(f(tuple(a, b), c), a, b, c)),\n    'uncurry': new PolyType(['a', 'b', 'c'], f(f(a, b, c), tuple(a, b), c)),\n    // Maybe\n    'Just': new PolyType(['a'], f(a, maybe(a))),\n    'Nothing': new PolyType(['a'], maybe(a)),\n    // Either\n    'Left': new PolyType(['a', 'b'], f(a, either(a, b))),\n    'Right': new PolyType(['a', 'b'], f(b, either(a, b))),\n    // Id\n    'id': new PolyType(['a'], f(a, a)),\n};\n/* Parser */\n// expr ::= identifier # var\n//        | ( \\ identifier -> expr ) # abs\n//        | ( expr )\n//        | expr expr # app\n//        | ( let identifier = expr in expr ) # let\n// expr ::= identifier expr' # var\n//        | ( \\ identifier -> expr ) expr' # abs\n//        | ( expr ) expr'\n//        | ( let identifier = expr in expr ) expr' # let\n// expr' ::= expr A' | eps # app\nvar ParseError = /** @class */ (function (_super) {\n    __extends(ParseError, _super);\n    function ParseError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"ParseError\";\n        return _this;\n    }\n    return ParseError;\n}(Error));\nexports.ParseError = ParseError;\nvar genlex = new masala_parser_1.GenLex();\nvar identifier = genlex.tokenize(masala_parser_1.C.charIn('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789*+-/%<>^:_|&!\\'').rep().map(function (t) { return t.join(); }), 'identifier');\nvar letTok = genlex.tokenize(masala_parser_1.C.string('let '), 'let');\nvar inTok = genlex.tokenize(masala_parser_1.C.string('in '), 'in');\nvar charLiteral = genlex.tokenize(masala_parser_1.C.charLiteral(), 'char');\nvar stringLiteral = genlex.tokenize(masala_parser_1.C.stringLiteral(), 'string');\nvar numberLiteral = genlex.tokenize(masala_parser_1.N.number(), 'number');\nvar lbracket = genlex.tokenize(masala_parser_1.C.char('['), 'lbracket');\nvar rbracket = genlex.tokenize(masala_parser_1.C.char(']'), 'rbracket');\nvar backslash = genlex.tokenize(masala_parser_1.C.char('\\\\'), 'backslash');\nvar arrow = genlex.tokenize(masala_parser_1.C.string('->'), 'arrow');\nvar lparen = genlex.tokenize(masala_parser_1.C.char('('), 'lparen');\nvar rparen = genlex.tokenize(masala_parser_1.C.char(')'), 'rparen');\nvar equal = genlex.tokenize(masala_parser_1.C.char('='), 'equal');\nvar comma = genlex.tokenize(masala_parser_1.C.char(','), 'comma');\nvar expression1 = function () {\n    return masala_parser_1.F.try(LET_())\n        .or(masala_parser_1.F.try(ABS_()))\n        .or(masala_parser_1.F.try(expression2()));\n};\nvar expression2 = function () {\n    return masala_parser_1.F.try(optApp(LEAF()))\n        .or(masala_parser_1.F.try(optApp(ABS())))\n        .or(masala_parser_1.F.try(optApp(LET())))\n        .or(masala_parser_1.F.try(optApp(PAR())));\n};\nvar expression3 = function () {\n    return masala_parser_1.F.try(LEAF())\n        .or(masala_parser_1.F.try(ABS()))\n        .or(masala_parser_1.F.try(LET()))\n        .or(masala_parser_1.F.try(PAR()));\n};\nvar toCharList = function (string, r) {\n    var chars = string.split('');\n    var pos = getPos(r);\n    var expr = new Var('[]', { start: pos.end - 1, end: pos.end });\n    for (var i = chars.length - 1; i >= 0; i--) {\n        var charPos = { start: pos.start + 1 + i, end: pos.start + 2 + i };\n        expr = new App(new App(new Var(':', charPos), new CharLiteral(chars[i], charPos), charPos), expr, { start: pos.start + 1 + i, end: pos.end - 1 });\n    }\n    expr.pos.start = pos.start;\n    expr.pos.end = pos.end;\n    return expr;\n};\nvar toList = function (tuple) {\n    var start = tuple.first();\n    var end = tuple.last();\n    var elements = tuple.at(1).map(function (t) { return t.array(); }).orElse([]);\n    var pos = { start: start, end: end };\n    var expr = new Var('[]', { start: pos.end - 1, end: pos.end });\n    for (var i = elements.length - 1; i >= 0; i--) {\n        expr = new App(new App(new Var(':', elements[i].pos), elements[i], elements[i].pos), expr, { start: elements[i].pos.start, end: pos.end });\n    }\n    expr.pos.start = pos.start;\n    expr.pos.end = pos.end;\n    return expr;\n};\nvar toTuple = function (tuple) {\n    var start = tuple.first();\n    var end = tuple.last();\n    var elements = tuple.at(1);\n    var result = nestLeft(__spreadArrays([new Var(','.repeat(elements.length - 1), { start: start, end: start + 1 })], elements));\n    result.pos.start = start;\n    result.pos.end = end;\n    return result;\n};\nvar getPos = function (r) {\n    var offset = r.getOffset() - 1;\n    var start = r.input.location(offset);\n    var guessedEnd = r.input.location(offset + 1);\n    var rawString = r.input.source.input.source.slice(start, guessedEnd);\n    var end = guessedEnd - (rawString.length - rawString.trimEnd().length);\n    return { start: start, end: end };\n};\nvar expandPos = function (v, r) {\n    var rawString = r.input.source.input.source;\n    v.pos.end += rawString.slice(v.pos.end).indexOf(')') + 1;\n    v.pos.start = rawString.slice(0, v.pos.start).lastIndexOf('(');\n    return v;\n};\n// We have to SHOUT as var and let are restricted keywords in JavaScript\nvar LEAF = function () { return masala_parser_1.F\n    .try(numberLiteral.map(function (value, r) { return new NumberLiteral(value, getPos(r)); }))\n    .or(masala_parser_1.F.try(stringLiteral.map(toCharList)))\n    .or(masala_parser_1.F.try(charLiteral.map(function (value, r) { return new CharLiteral(value, getPos(r)); })))\n    .or(masala_parser_1.F.try(lbracket.map(function (v, r) { return r.location() - 1; }).then((masala_parser_1.F.lazy(expression1).then((comma.drop().then(masala_parser_1.F.lazy(expression1))).optrep())).opt()).then(rbracket.map(function (s, r) { return getPos(r).end; })).map(toList)))\n    .or(masala_parser_1.F.try(lparen.map(function (v, r) { return r.location() - 1; }).then((masala_parser_1.F.lazy(expression1).then((comma.drop().then(masala_parser_1.F.lazy(expression1))).rep())).array()).then(rparen.map(function (s, r) { return getPos(r).end; })).map(toTuple)))\n    .or(masala_parser_1.F.try(identifier.map(function (value, r) { return new Var(value, getPos(r)); }))); };\nvar ABS = function () { return lparen.drop().then(ABS_()).then(rparen.drop()).single().map(expandPos); };\nvar ABS_ = function () { return backslash.map(function (v, r) { return r.location() - 1; }).then(identifier).then(arrow.drop()).then(masala_parser_1.F.lazy(expression2)).map(function (tuple, r) { return new Abs(tuple.at(1), tuple.at(2), { start: tuple.at(0), end: r.location() }); }); };\nvar PAR = function () { return lparen.drop().then(masala_parser_1.F.lazy(expression2)).then(rparen.drop()).single().map(expandPos); };\nvar LET = function () { return lparen.drop().then(LET_()).then(rparen.drop()).single().map(expandPos); };\nvar LET_ = function () { return letTok.map(function (v, r) { return getPos(r).start; }).then(identifier).then(equal.drop()).then(masala_parser_1.F.lazy(expression2)).then(inTok.drop()).then(masala_parser_1.F.lazy(expression2)).map(function (tuple, r) { return new Let(tuple.at(1), tuple.at(2), tuple.at(3), { start: tuple.at(0), end: r.location() }); }); };\nvar optApp = function (parser) { return parser.then(expressionPrime()).array().map(nestLeft); };\nvar expressionPrime = function () { return masala_parser_1.F.lazy(expression3).optrep(); };\nvar nestLeft = function (v) { return v.reduce(function (prev, cur) { return new App(prev, cur, { start: prev.pos.start, end: cur.pos.end }); }); };\nvar specialCases = function (code) {\n    if (code == 'let' || code.endsWith(' let')) {\n        return {\n            accepted: false,\n            issuePosition: { start: code.length - 3, end: code.length },\n            message: 'Failed to parse'\n        };\n    }\n    if (code == 'in' || code.endsWith(' in')) {\n        return {\n            accepted: false,\n            issuePosition: { start: code.length - 2, end: code.length },\n            message: 'Failed to parse'\n        };\n    }\n};\nvar parser = genlex.use(expression1().then(masala_parser_1.F.eos().drop()).single());\nfunction parse(code, forResponse) {\n    if (forResponse === void 0) { forResponse = false; }\n    var specialCase = specialCases(code);\n    if (specialCase) {\n        if (forResponse)\n            return specialCase;\n        throw new ParseError('Failed to parse:\\n\\t' + code + '\\n\\t' + ' '.repeat(specialCase.issuePosition.start) + '^');\n    }\n    var response = parser.parse(masala_parser_1.Streams.ofString(code));\n    if (forResponse) {\n        if (response.isAccepted())\n            return { accepted: true, value: response.value };\n        return { accepted: false, issuePosition: { start: response.location(), end: code.length }, message: 'Failed to parse' };\n    }\n    if (response.isAccepted())\n        return response.value;\n    throw new ParseError('Failed to parse:\\n\\t' + code + '\\n\\t' + ' '.repeat(response.location()) + '^');\n}\nexports.parse = parse;\nvar typeUtils = { number: number, char: char, boolean: boolean, f: f, list: list, tuple: tuple, maybe: maybe, either: either, a: a, b: b, c: c, d: d, pt: pt, standardCtx: standardCtx };\nexports.typeUtils = typeUtils;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.apply = exports.infer = exports.unify = exports.combine = exports.substitute = exports.TypeInferenceError = void 0;\nvar language_1 = require(\"language\");\nvar TypeInferenceError = /** @class */ (function (_super) {\n    __extends(TypeInferenceError, _super);\n    function TypeInferenceError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = \"TypeInferenceError\";\n        return _this;\n    }\n    return TypeInferenceError;\n}(Error));\nexports.TypeInferenceError = TypeInferenceError;\nfunction substitute(substitution, arg) {\n    var context = arg;\n    var mappedContext = {};\n    for (var key in context) {\n        mappedContext[key] = apply(context[key], substitution);\n    }\n    return mappedContext;\n}\nexports.substitute = substitute;\n/** Combines substitutions. Applies leftmost substitution first, e.g. combine(a, b).apply(e) == e.apply(a).apply(b) */\nfunction combine() {\n    var substitutions = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        substitutions[_i] = arguments[_i];\n    }\n    if (substitutions.length === 0)\n        return {};\n    if (substitutions.length === 1)\n        return substitutions[0];\n    if (substitutions.length > 2)\n        return combine(substitutions[0], combine.apply(void 0, substitutions.slice(1)));\n    var a = substitutions[0];\n    var b = substitutions[1];\n    var newSubstitution = {};\n    for (var key in a) {\n        newSubstitution[key] = apply(a[key], b);\n    }\n    for (var key in b) {\n        if (!(key in a)) {\n            newSubstitution[key] = b[key];\n        }\n    }\n    return newSubstitution;\n}\nexports.combine = combine;\nfunction unify(type1, type2) {\n    var _a;\n    if (type1 instanceof language_1.TypeVar) {\n        if (contains(type2, type1)) {\n            throw new TypeInferenceError('Contains/occurs check failed with ' + JSON.stringify(type1) + ' and ' + JSON.stringify(type2));\n        }\n        return _a = {}, _a[type1.name] = type2, _a;\n    }\n    if (type2 instanceof language_1.TypeVar) {\n        return unify(type2, type1);\n    }\n    if (type1 instanceof language_1.TypeFuncApp && type2 instanceof language_1.TypeFuncApp) {\n        if (type1.constructorName !== type2.constructorName) {\n            throw new TypeInferenceError('Could not unify types `' + type1.toString() + '` and `' + type2.toString() + '` with different constructors `' + type1.constructorName + '` and `' + type2.constructorName + '`');\n        }\n        if (type1.args.length !== type2.args.length) {\n            throw new TypeInferenceError('Could not unify types `' + type1.toString() + '` and `' + type2.toString() + '` with different argument list lengths `' + type1.args.length + '` and `' + type2.args.length + '`');\n        }\n        var sub = {};\n        for (var i = 0; i < type1.args.length; i++) {\n            sub = combine(sub, unify(apply(type1.args[i], sub), apply(type2.args[i], sub)));\n        }\n        return sub;\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nexports.unify = unify;\nfunction unique(xs) {\n    var vs = [];\n    new Set(xs).forEach(function (x) { return vs.push(x); });\n    return vs;\n}\n/** a \\ b */\nfunction diff(a, b) {\n    var bset = new Set(b);\n    return a.filter(function (v) { return !bset.has(v); });\n}\nfunction freeVars(type) {\n    if (type instanceof language_1.PolyType) {\n        return diff(freeVars(type.monoType), type.quantifiedVars);\n    }\n    if (type instanceof language_1.TypeVar) {\n        return [type.name];\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return type.args.map(freeVars).reduce(function (acc, cur) { return __spreadArrays(acc, cur); }, []);\n    }\n    if (type) {\n        // type: Context\n        return Object.values(type).map(freeVars).reduce(function (acc, cur) { return __spreadArrays(acc, cur); }, []);\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction generalise(ctx, type) {\n    return new language_1.PolyType(unique(diff(freeVars(type), freeVars(ctx))), type);\n}\nfunction infer(expr, forResponse, ctx) {\n    if (forResponse === void 0) { forResponse = false; }\n    if (ctx === void 0) { ctx = language_1.typeUtils.standardCtx; }\n    var typeCounter = 0;\n    var freshTypeName = function () { return \"t\" + typeCounter++; };\n    if (!forResponse)\n        return _infer(expr, ctx, freshTypeName)[0];\n    var steps = [];\n    var logger = function (message, notes) {\n        steps.push({ message: message, ast: cloneAst(expr, notes) });\n    };\n    try {\n        return {\n            accepted: true,\n            value: {\n                type: _infer(expr, ctx, freshTypeName, logger)[0],\n                steps: steps\n            }\n        };\n    }\n    catch (e) {\n        return {\n            accepted: false,\n            value: {\n                steps: steps\n            },\n            issuePosition: e.name == TypeInferenceError.name ? e.expr.pos : expr.pos,\n            message: e.message\n        };\n    }\n}\nexports.infer = infer;\nvar cloneAst = function (expr, notes) {\n    if (expr instanceof language_1.CharLiteral)\n        return new language_1.CharLiteral(expr.value, expr.pos, notes.get(expr));\n    if (expr instanceof language_1.NumberLiteral)\n        return new language_1.NumberLiteral(expr.value, expr.pos, notes.get(expr));\n    if (expr instanceof language_1.Var)\n        return new language_1.Var(expr.name, expr.pos, notes.get(expr));\n    if (expr instanceof language_1.App)\n        return new language_1.App(cloneAst(expr.func, notes), cloneAst(expr.arg, notes), expr.pos, notes.get(expr));\n    if (expr instanceof language_1.Abs)\n        return new language_1.Abs(expr.param, cloneAst(expr.body, notes), expr.pos, notes.get(expr));\n    if (expr instanceof language_1.Let)\n        return new language_1.Let(expr.param, cloneAst(expr.def, notes), cloneAst(expr.body, notes), expr.pos, notes.get(expr));\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n};\nvar highlight = function (expr) {\n    var notes = new Map();\n    notes.set(expr, 'highlight');\n    return notes;\n};\nvar str = function (substitution, except) { return ('{ ' + Object.keys(substitution).filter(function (k) { return k !== except; }).map(function (k) { return k + ' ↦ ' + substitution[k].toString(); }).join(', ') + ' }').replace('{  }', '{}'); };\nfunction _infer(expr, ctx, freshTypeName, logger) {\n    var _a, _b;\n    if (logger === void 0) { logger = function () { }; }\n    if (expr instanceof language_1.CharLiteral) {\n        logger('We know the primitive `' + expr.toString() + '` is a `char`', highlight(expr));\n        return [inst(new language_1.PolyType([], new language_1.TypeFuncApp('char')), freshTypeName), {}];\n    }\n    if (expr instanceof language_1.NumberLiteral) {\n        logger('We know the primitive `' + expr.toString() + '` is a `number`', highlight(expr));\n        return [inst(new language_1.PolyType([], new language_1.TypeFuncApp('number')), freshTypeName), {}];\n    }\n    if (expr instanceof language_1.Var) {\n        var type = ctx[expr.name];\n        if (!type) {\n            logger('We try to look up the variable `' + expr.toString() + '` but find it is not in scope. We stop here as this is an error.', highlight(expr));\n            var err = new TypeInferenceError('`' + expr.name + '` is not in scope');\n            err.expr = expr;\n            throw err;\n        }\n        var instantiatedType = inst(type, freshTypeName);\n        logger('We can look up the variable `' + expr.toString() + '` and find it has type `' + type.toString() + (type.quantifiedVars.length ? '`\\nWe instatiate this type with fresh type variables to get `' + instantiatedType.toString() + '`' : ''), highlight(expr));\n        return [instantiatedType, {}];\n    }\n    if (expr instanceof language_1.App) {\n        var _c = _infer(expr.func, ctx, freshTypeName, logger), funcType = _c[0], funcSubstitution = _c[1];\n        var _d = _infer(expr.arg, substitute(funcSubstitution, ctx), freshTypeName, logger), argType = _d[0], argSubstitution = _d[1];\n        var t = new language_1.TypeVar(freshTypeName());\n        // Give an easier to read and understand message if we can, otherwise default to the more general case\n        var firstPartOfLogMessage = (funcType instanceof language_1.TypeFuncApp && funcType.constructorName == '->')\n            ? 'In function application, the function must accept the expected argument type.\\nBefore unification, the function has type `' + funcType.toString() + '`\\n\\nTherefore we unify:\\nFunction accepts `' + funcType.args[0].toString() + '`\\nArgument has type `' + argType.toString() + '`\\n\\n'\n            : 'In function application, the function must accept the expected argument type and returns some other type.\\n\\nTherefore we unify:\\nFunction type `' + funcType.toString() + '`\\nArgument to fresh type `' + new language_1.TypeFuncApp(\"->\", argType, t).toString() + '`\\n\\n';\n        var unifiedSubstitution = void 0;\n        try {\n            unifiedSubstitution = unify(apply(funcType, argSubstitution), new language_1.TypeFuncApp(\"->\", argType, t));\n        }\n        catch (err) {\n            logger(firstPartOfLogMessage + 'However, these two types are not unifiable. We stop here as this is an error.\\n\\nMore details:\\n' + err.message, highlight(expr));\n            err.expr = expr;\n            throw err;\n        }\n        var exprType = apply(t, unifiedSubstitution);\n        logger(firstPartOfLogMessage + 'This gives the substitution `' + str(unifiedSubstitution, t.name) + '`\\nAnd the function\\'s return type as `' + exprType.toString() + '`', highlight(expr));\n        return [exprType, combine(funcSubstitution, argSubstitution, unifiedSubstitution)];\n    }\n    if (expr instanceof language_1.Abs) {\n        var t = new language_1.TypeVar(freshTypeName());\n        logger('Our function definition binds `' + expr.param + '` in the body to the fresh type `' + t.toString() + '`', highlight(expr));\n        var _e = _infer(expr.body, __assign(__assign({}, ctx), (_a = {}, _a[expr.param] = new language_1.PolyType([], t), _a)), freshTypeName, logger), bodyType = _e[0], bodySubstitution = _e[1];\n        var type = apply(new language_1.TypeFuncApp(\"->\", t, bodyType), bodySubstitution);\n        logger((bodySubstitution[t.name] ? 'We apply the substitution `{ ' + t.name + ' ↦ ' + bodySubstitution[t.name].toString() + ' }` to get the parameter\\'s type `' + type.args[0].toString() + '`.\\n' : '') + 'The return type is given by the function body\\'s type `' + type.args[1].toString() + '`\\nTherefore the overall type is `' + type.toString() + '`', highlight(expr));\n        return [type, bodySubstitution];\n    }\n    if (expr instanceof language_1.Let) {\n        var _f = _infer(expr.def, ctx, freshTypeName, logger), defType = _f[0], defSubstitution = _f[1];\n        var generalisedDefType = generalise(substitute(defSubstitution, ctx), defType);\n        logger('Our let statement binds `' + expr.param + '` in the body to the type `' + generalisedDefType.toString() + '`', highlight(expr));\n        var _g = _infer(expr.body, __assign(__assign({}, substitute(defSubstitution, ctx)), (_b = {}, _b[expr.param] = generalisedDefType, _b)), freshTypeName, logger), bodyType = _g[0], bodySubstitution = _g[1];\n        logger('Our let statement then takes its body\\'s type `' + bodyType.toString() + '`', highlight(expr));\n        return [bodyType, combine(defSubstitution, bodySubstitution)];\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction inst(type, freshTypeName, from, to) {\n    if (from === void 0) { from = []; }\n    if (to === void 0) { to = []; }\n    if (type instanceof language_1.TypeVar) {\n        var i = from.indexOf(type.name);\n        return (i === -1) ? type : new language_1.TypeVar(to[i]);\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return new (language_1.TypeFuncApp.bind.apply(language_1.TypeFuncApp, __spreadArrays([void 0, type.constructorName], type.args.map(function (arg) { return inst(arg, freshTypeName, from, to); }))))();\n    }\n    if (type instanceof language_1.PolyType) {\n        return inst(type.monoType, freshTypeName, type.quantifiedVars, type.quantifiedVars.map(freshTypeName));\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nfunction apply(type, substitution) {\n    if (type instanceof language_1.TypeVar) {\n        return type.name in substitution ? substitution[type.name] : type;\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return new (language_1.TypeFuncApp.bind.apply(language_1.TypeFuncApp, __spreadArrays([void 0, type.constructorName], type.args.map(function (arg) { return apply(arg, substitution); }))))();\n    }\n    if (type instanceof language_1.PolyType) {\n        return new language_1.PolyType(type.quantifiedVars, apply(type.monoType, substitution));\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\nexports.apply = apply;\nfunction contains(type, other) {\n    if (type instanceof language_1.TypeVar) {\n        return type.name == other.name;\n    }\n    if (type instanceof language_1.TypeFuncApp) {\n        return type.args.some(function (arg) { return contains(arg, other); });\n    }\n    if (type instanceof language_1.PolyType) {\n        return contains(type.monoType, other) && !type.quantifiedVars.includes(other.name);\n    }\n    // Should be unreachable...\n    throw new Error('Internal error, this should never happen');\n}\n","import React, { ReactNode } from 'react';\nimport { Expr, Var, App, Abs, Let, NumberLiteral, CharLiteral } from 'language'\n\ntype HoverCallback = (active: boolean, p: { start: number, end: number }) => void; \n\nfunction ASTView({ ast, hoverCallback }: { ast: Expr, hoverCallback: HoverCallback }) {\n    return <div className=\"ast-view\"><NodeView node={ast} hoverCallback={hoverCallback} /></div>\n}\n\nfunction NodeView({ node, hoverCallback }: { node: Expr, hoverCallback: HoverCallback }) {\n    if (node instanceof CharLiteral || node instanceof NumberLiteral) {\n        return <NodeWrapperView node={node} hoverCallback={hoverCallback}>{node.value}</NodeWrapperView>;\n    }\n\n    if (node instanceof Var) {\n        return <NodeWrapperView node={node} hoverCallback={hoverCallback}>{node.name}</NodeWrapperView>;\n    }\n\n    if (node instanceof App) {\n        return <>\n            <NodeWrapperView node={node} hoverCallback={hoverCallback}><span className=\"sans-serif\">Function application</span></NodeWrapperView>\n            <NodeChildView><NodeView node={node.func} hoverCallback={hoverCallback} /></NodeChildView>\n            <NodeChildView><NodeView node={node.arg} hoverCallback={hoverCallback}/></NodeChildView>\n        </>;\n    }\n\n    if (node instanceof Abs) {\n        return <>\n            <NodeWrapperView node={node} hoverCallback={hoverCallback}>λ{node.param}</NodeWrapperView>\n            <NodeChildView symbol='->'><NodeView node={node.body} hoverCallback={hoverCallback}/></NodeChildView>\n        </>\n    }\n\n    if (node instanceof Let) {\n        return <>\n            <NodeWrapperView node={node} hoverCallback={hoverCallback}>let {node.param}</NodeWrapperView>\n            <NodeChildView symbol='='><NodeView node={node.def} hoverCallback={hoverCallback}/></NodeChildView>\n            <NodeChildView symbol='in'><NodeView node={node.body} hoverCallback={hoverCallback}/></NodeChildView>\n        </>\n    }\n\n    throw new Error('Attempted to display a node of invalid type ' + typeof node);\n}\n\nfunction NodeWrapperView({ children, node, hoverCallback }: { children: ReactNode, node: Expr, hoverCallback: HoverCallback }) {\n    return <div className={\"ast-node \" + (node.notes || '')} onMouseOver={() => hoverCallback(true, node.pos)} onMouseOut={() => hoverCallback(false, node.pos)}>{children}</div>;\n}\n\nfunction NodeChildView({ children, symbol }: { children: ReactNode, symbol?: string }) {\n    return <div className=\"ast-child\" data-symbol={symbol}>{children}</div>\n}\n\nexport default ASTView;","import React, { useMemo, useEffect } from 'react';\nimport { parse } from 'language'\nimport { infer } from 'algorithm-w'\nimport ASTView from './ASTView';\n\nexport interface Highlight {\n  start: number;\n  end: number;\n  className: string;\n}\n\nfunction ResultView({ code, setHighlights }: { code: string, setHighlights: (h: Highlight[]) => void }) {\n  // Parse the code, highlighting any errors\n  const parseResult = useMemo(() => {\n    return parse(code, true);\n  }, [code]);\n  useEffect(() => setHighlights(parseResult.accepted ? [] : [{ start: parseResult.issuePosition.start, end: parseResult.issuePosition.end, className: 'highlight-error' }]), [parseResult, setHighlights]);\n\n  // Infer the types, highlighting any errors\n  const inferenceResult = useMemo(() => {\n    if (!parseResult.accepted) return;\n    return infer(parseResult.value, true);\n  }, [parseResult])!;\n  useEffect(() => inferenceResult && setHighlights(inferenceResult.accepted ? [] : [{ start: inferenceResult.issuePosition.start, end: inferenceResult.issuePosition.end, className: 'highlight-error' }]), [inferenceResult, setHighlights]);\n\n  if (!parseResult.accepted) {\n    return <>\n      <h2>AST</h2>\n      <p>{parseResult.message}</p>\n    </>;\n  }\n\n  const hoverCallback = createHoverCallback(setHighlights, []);\n  return <>\n    <h2>AST</h2>\n    <ASTView ast={parseResult.value} hoverCallback={hoverCallback} />\n\n    <h2>Type derivation</h2>\n    {inferenceResult.value!.steps.map((step, i) => <div key={i} className='type-derivation-step'><h3>Step {i+1}</h3><p>{step.message.split('`').map((s, j) => j % 2 === 0 ? s : <code key={j}>{s}</code>)}</p><ASTView ast={step.ast} hoverCallback={hoverCallback} /></div>)}\n\n    {inferenceResult.accepted && <>\n      <h2>Type</h2>\n      <p><code>{inferenceResult.value.type.toString()}</code></p>\n    </>}\n  </>;\n}\n\nconst createHoverCallback = (setHighlights: (h: Highlight[]) => void, otherHighlights: Highlight[]) => (active: boolean, p: { start: number, end: number }) => {\n  setHighlights(active ? [...otherHighlights, { start: p.start, end: p.end, className: 'highlight-white' }] : otherHighlights);\n}\n\nexport default ResultView;","import React, { useState } from 'react';\nimport './Main.css';\nimport ResultView, { Highlight } from './ResultView';\n\nfunction Main() {\n  const [code, setCode] = useState('map not []');\n  const [highlights, setHighlights] = useState<Highlight[]>([]);\n\n  return (\n    <>\n      <h1>interactive type inference</h1>\n      <h2>\n        Play with algorithm W in your browser.\n      </h2>\n      <h2>Samples:\n        <button onClick={() => setCode('4')}>4</button>\n        <button onClick={() => setCode('not')}>not</button>\n        <button onClick={() => setCode('not True')}>not True</button>\n        <button onClick={() => setCode('+')}>+</button>\n        <button onClick={() => setCode('map not []')}>map not []</button>\n        <button onClick={() => setCode('fst')}>fst</button>\n        <button onClick={() => setCode('Just')}>Just</button>\n        <button onClick={() => setCode('let x = 3 in + x')}>let x = 3 in + x</button>\n        <button onClick={() => setCode('\\\\x -> / x 2')}>\\x -{'>'} / x 2</button>\n        <button onClick={() => setCode('cons 23 []')}>cons 23 []</button>\n      </h2>\n      <div className='code-container'>\n        <input placeholder=\"Enter code...\" value={code} onChange={e => setCode(e.target.value)} />\n        {code && highlights.map((h, i) => <p key={i}>{code.slice(0, h.start)}<span className={h.className}>{code.slice(h.start, h.end)}</span>{code.slice(h.end)}</p>)}\n      </div>\n      {code && <ResultView code={code} setHighlights={setHighlights} />}\n    </>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}